Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instBlock
Rule 2     instBlock -> TkOBlock declare TkCBlock
Rule 3     instBlock -> TkOBlock declare code TkCBlock
Rule 4     instBlock -> TkOBlock code TkCBlock
Rule 5     declare -> TkDeclare declaration
Rule 6     declare -> TkDeclare seqDeclare
Rule 7     declaration -> DeclaList TkTwoPoints type
Rule 8     DeclaList -> TkId TkComma DeclaList
Rule 9     DeclaList -> TkId
Rule 10    seqDeclare -> declaration TkSemicolon declaration
Rule 11    seqDeclare -> seqDeclare TkSemicolon declaration
Rule 12    type -> TkInt
Rule 13    type -> TkBool
Rule 14    type -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket
Rule 15    type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkMinus TkNum TkCBracket
Rule 16    type -> TkArray TkOBracket TkNum TkSoForth TkMinus TkNum TkCBracket
Rule 17    type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkNum TkCBracket
Rule 18    code -> instruction
Rule 19    code -> sequencing
Rule 20    sequencing -> instruction TkSemicolon instruction
Rule 21    sequencing -> sequencing TkSemicolon instruction
Rule 22    instPrint -> TkPrint printAble
Rule 23    instPrint -> TkPrint instConcat
Rule 24    instSkip -> TkSkip
Rule 25    instConcat -> printAble TkConcat printAble
Rule 26    instConcat -> instConcat TkConcat printAble
Rule 27    printAble -> TkString
Rule 28    printAble -> exp
Rule 29    arrayIni -> exp TkComma exp
Rule 30    arrayIni -> arrayIni TkComma exp
Rule 31    instAsig -> TkId TkAsig arrayIni
Rule 32    instAsig -> TkId TkAsig exp
Rule 33    instAsig -> TkId TkAsig modArray
Rule 34    instruction -> instPrint
Rule 35    instruction -> instAsig
Rule 36    instruction -> instSkip
Rule 37    instruction -> instBlock
Rule 38    instruction -> instIf
Rule 39    instruction -> instDo
Rule 40    instruction -> instFor
Rule 41    consArray -> TkId TkOBracket exp TkCBracket
Rule 42    consArray -> modArray TkOBracket exp TkCBracket
Rule 43    modArray -> modArray TkOpenPar exp TkTwoPoints exp TkClosePar
Rule 44    modArray -> finish
Rule 45    finish -> TkId TkOpenPar exp TkTwoPoints exp TkClosePar
Rule 46    exp -> exp TkPlus exp
Rule 47    exp -> exp TkMinus exp
Rule 48    exp -> exp TkMult exp
Rule 49    exp -> exp TkAnd exp
Rule 50    exp -> exp TkOr exp
Rule 51    exp -> exp TkLess exp
Rule 52    exp -> exp TkLeq exp
Rule 53    exp -> exp TkGeq exp
Rule 54    exp -> exp TkGreater exp
Rule 55    exp -> exp TkEqual exp
Rule 56    exp -> exp TkNEqual exp
Rule 57    exp -> TkNot exp
Rule 58    exp -> TkOpenPar exp TkClosePar
Rule 59    exp -> consArray
Rule 60    exp -> TkMinus exp
Rule 61    exp -> TkNum
Rule 62    exp -> TkTrue
Rule 63    exp -> TkFalse
Rule 64    exp -> TkId
Rule 65    instFor -> TkFor range TkArrow code TkRof
Rule 66    range -> TkId TkIn exp TkTo exp
Rule 67    instIf -> TkIf guards TkFi
Rule 68    instDo -> TkDo guards TkOd
Rule 69    guards -> guards TkGuard then
Rule 70    guards -> then
Rule 71    then -> exp TkArrow code
Rule 72    ignorados -> TkComment
Rule 73    ignorados -> TkSpace
Rule 74    ignorados -> TkNewLine
Rule 75    ignorados -> ignorados

Terminals, with rules where they appear

TkAnd                : 49
TkArray              : 14 15 16 17
TkArrow              : 65 71
TkAsig               : 31 32 33
TkBool               : 13
TkCBlock             : 2 3 4
TkCBracket           : 14 15 16 17 41 42
TkClosePar           : 43 45 58
TkComma              : 8 29 30
TkComment            : 72
TkConcat             : 25 26
TkDeclare            : 5 6
TkDo                 : 68
TkEqual              : 55
TkFalse              : 63
TkFi                 : 67
TkFor                : 65
TkGeq                : 53
TkGreater            : 54
TkGuard              : 69
TkId                 : 8 9 31 32 33 41 45 64 66
TkIf                 : 67
TkIn                 : 66
TkInt                : 12
TkLeq                : 52
TkLess               : 51
TkMinus              : 15 15 16 17 47 60
TkMult               : 48
TkNEqual             : 56
TkNewLine            : 74
TkNot                : 57
TkNum                : 14 14 15 15 16 16 17 17 61
TkOBlock             : 2 3 4
TkOBracket           : 14 15 16 17 41 42
TkOd                 : 68
TkOpenPar            : 43 45 58
TkOr                 : 50
TkPlus               : 46
TkPrint              : 22 23
TkRof                : 65
TkSemicolon          : 10 11 20 21
TkSkip               : 24
TkSoForth            : 14 15 16 17
TkSpace              : 73
TkString             : 27
TkTo                 : 66
TkTrue               : 62
TkTwoPoints          : 7 43 45
error                : 

Nonterminals, with rules where they appear

DeclaList            : 7 8
arrayIni             : 30 31
code                 : 3 4 65 71
consArray            : 59
declaration          : 5 10 10 11
declare              : 2 3
exp                  : 28 29 29 30 32 41 42 43 43 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 53 54 54 55 55 56 56 57 58 60 66 66 71
finish               : 44
guards               : 67 68 69
ignorados            : 75
instAsig             : 35
instBlock            : 1 37
instConcat           : 23 26
instDo               : 39
instFor              : 40
instIf               : 38
instPrint            : 34
instSkip             : 36
instruction          : 18 20 20 21
modArray             : 33 42 43
printAble            : 22 25 25 26
program              : 0
range                : 65
seqDeclare           : 6 11
sequencing           : 19 21
then                 : 69 70
type                 : 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instBlock
    (2) instBlock -> . TkOBlock declare TkCBlock
    (3) instBlock -> . TkOBlock declare code TkCBlock
    (4) instBlock -> . TkOBlock code TkCBlock

    TkOBlock        shift and go to state 3

    program                        shift and go to state 1
    instBlock                      shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> instBlock .

    $end            reduce using rule 1 (program -> instBlock .)


state 3

    (2) instBlock -> TkOBlock . declare TkCBlock
    (3) instBlock -> TkOBlock . declare code TkCBlock
    (4) instBlock -> TkOBlock . code TkCBlock
    (5) declare -> . TkDeclare declaration
    (6) declare -> . TkDeclare seqDeclare
    (18) code -> . instruction
    (19) code -> . sequencing
    (34) instruction -> . instPrint
    (35) instruction -> . instAsig
    (36) instruction -> . instSkip
    (37) instruction -> . instBlock
    (38) instruction -> . instIf
    (39) instruction -> . instDo
    (40) instruction -> . instFor
    (20) sequencing -> . instruction TkSemicolon instruction
    (21) sequencing -> . sequencing TkSemicolon instruction
    (22) instPrint -> . TkPrint printAble
    (23) instPrint -> . TkPrint instConcat
    (31) instAsig -> . TkId TkAsig arrayIni
    (32) instAsig -> . TkId TkAsig exp
    (33) instAsig -> . TkId TkAsig modArray
    (24) instSkip -> . TkSkip
    (2) instBlock -> . TkOBlock declare TkCBlock
    (3) instBlock -> . TkOBlock declare code TkCBlock
    (4) instBlock -> . TkOBlock code TkCBlock
    (67) instIf -> . TkIf guards TkFi
    (68) instDo -> . TkDo guards TkOd
    (65) instFor -> . TkFor range TkArrow code TkRof

    TkDeclare       shift and go to state 6
    TkPrint         shift and go to state 16
    TkId            shift and go to state 17
    TkSkip          shift and go to state 18
    TkOBlock        shift and go to state 3
    TkIf            shift and go to state 19
    TkDo            shift and go to state 20
    TkFor           shift and go to state 21

    declare                        shift and go to state 4
    code                           shift and go to state 5
    instruction                    shift and go to state 7
    sequencing                     shift and go to state 8
    instPrint                      shift and go to state 9
    instAsig                       shift and go to state 10
    instSkip                       shift and go to state 11
    instBlock                      shift and go to state 12
    instIf                         shift and go to state 13
    instDo                         shift and go to state 14
    instFor                        shift and go to state 15

state 4

    (2) instBlock -> TkOBlock declare . TkCBlock
    (3) instBlock -> TkOBlock declare . code TkCBlock
    (18) code -> . instruction
    (19) code -> . sequencing
    (34) instruction -> . instPrint
    (35) instruction -> . instAsig
    (36) instruction -> . instSkip
    (37) instruction -> . instBlock
    (38) instruction -> . instIf
    (39) instruction -> . instDo
    (40) instruction -> . instFor
    (20) sequencing -> . instruction TkSemicolon instruction
    (21) sequencing -> . sequencing TkSemicolon instruction
    (22) instPrint -> . TkPrint printAble
    (23) instPrint -> . TkPrint instConcat
    (31) instAsig -> . TkId TkAsig arrayIni
    (32) instAsig -> . TkId TkAsig exp
    (33) instAsig -> . TkId TkAsig modArray
    (24) instSkip -> . TkSkip
    (2) instBlock -> . TkOBlock declare TkCBlock
    (3) instBlock -> . TkOBlock declare code TkCBlock
    (4) instBlock -> . TkOBlock code TkCBlock
    (67) instIf -> . TkIf guards TkFi
    (68) instDo -> . TkDo guards TkOd
    (65) instFor -> . TkFor range TkArrow code TkRof

    TkCBlock        shift and go to state 22
    TkPrint         shift and go to state 16
    TkId            shift and go to state 17
    TkSkip          shift and go to state 18
    TkOBlock        shift and go to state 3
    TkIf            shift and go to state 19
    TkDo            shift and go to state 20
    TkFor           shift and go to state 21

    code                           shift and go to state 23
    instruction                    shift and go to state 7
    sequencing                     shift and go to state 8
    instPrint                      shift and go to state 9
    instAsig                       shift and go to state 10
    instSkip                       shift and go to state 11
    instBlock                      shift and go to state 12
    instIf                         shift and go to state 13
    instDo                         shift and go to state 14
    instFor                        shift and go to state 15

state 5

    (4) instBlock -> TkOBlock code . TkCBlock

    TkCBlock        shift and go to state 24


state 6

    (5) declare -> TkDeclare . declaration
    (6) declare -> TkDeclare . seqDeclare
    (7) declaration -> . DeclaList TkTwoPoints type
    (10) seqDeclare -> . declaration TkSemicolon declaration
    (11) seqDeclare -> . seqDeclare TkSemicolon declaration
    (8) DeclaList -> . TkId TkComma DeclaList
    (9) DeclaList -> . TkId

    TkId            shift and go to state 28

    declaration                    shift and go to state 25
    seqDeclare                     shift and go to state 26
    DeclaList                      shift and go to state 27

state 7

    (18) code -> instruction .
    (20) sequencing -> instruction . TkSemicolon instruction

    TkCBlock        reduce using rule 18 (code -> instruction .)
    TkFi            reduce using rule 18 (code -> instruction .)
    TkGuard         reduce using rule 18 (code -> instruction .)
    TkOd            reduce using rule 18 (code -> instruction .)
    TkRof           reduce using rule 18 (code -> instruction .)
    TkSemicolon     shift and go to state 29


state 8

    (19) code -> sequencing .
    (21) sequencing -> sequencing . TkSemicolon instruction

    TkCBlock        reduce using rule 19 (code -> sequencing .)
    TkFi            reduce using rule 19 (code -> sequencing .)
    TkGuard         reduce using rule 19 (code -> sequencing .)
    TkOd            reduce using rule 19 (code -> sequencing .)
    TkRof           reduce using rule 19 (code -> sequencing .)
    TkSemicolon     shift and go to state 30


state 9

    (34) instruction -> instPrint .

    TkSemicolon     reduce using rule 34 (instruction -> instPrint .)
    TkCBlock        reduce using rule 34 (instruction -> instPrint .)
    TkFi            reduce using rule 34 (instruction -> instPrint .)
    TkGuard         reduce using rule 34 (instruction -> instPrint .)
    TkOd            reduce using rule 34 (instruction -> instPrint .)
    TkRof           reduce using rule 34 (instruction -> instPrint .)


state 10

    (35) instruction -> instAsig .

    TkSemicolon     reduce using rule 35 (instruction -> instAsig .)
    TkCBlock        reduce using rule 35 (instruction -> instAsig .)
    TkFi            reduce using rule 35 (instruction -> instAsig .)
    TkGuard         reduce using rule 35 (instruction -> instAsig .)
    TkOd            reduce using rule 35 (instruction -> instAsig .)
    TkRof           reduce using rule 35 (instruction -> instAsig .)


state 11

    (36) instruction -> instSkip .

    TkSemicolon     reduce using rule 36 (instruction -> instSkip .)
    TkCBlock        reduce using rule 36 (instruction -> instSkip .)
    TkFi            reduce using rule 36 (instruction -> instSkip .)
    TkGuard         reduce using rule 36 (instruction -> instSkip .)
    TkOd            reduce using rule 36 (instruction -> instSkip .)
    TkRof           reduce using rule 36 (instruction -> instSkip .)


state 12

    (37) instruction -> instBlock .

    TkSemicolon     reduce using rule 37 (instruction -> instBlock .)
    TkCBlock        reduce using rule 37 (instruction -> instBlock .)
    TkFi            reduce using rule 37 (instruction -> instBlock .)
    TkGuard         reduce using rule 37 (instruction -> instBlock .)
    TkOd            reduce using rule 37 (instruction -> instBlock .)
    TkRof           reduce using rule 37 (instruction -> instBlock .)


state 13

    (38) instruction -> instIf .

    TkSemicolon     reduce using rule 38 (instruction -> instIf .)
    TkCBlock        reduce using rule 38 (instruction -> instIf .)
    TkFi            reduce using rule 38 (instruction -> instIf .)
    TkGuard         reduce using rule 38 (instruction -> instIf .)
    TkOd            reduce using rule 38 (instruction -> instIf .)
    TkRof           reduce using rule 38 (instruction -> instIf .)


state 14

    (39) instruction -> instDo .

    TkSemicolon     reduce using rule 39 (instruction -> instDo .)
    TkCBlock        reduce using rule 39 (instruction -> instDo .)
    TkFi            reduce using rule 39 (instruction -> instDo .)
    TkGuard         reduce using rule 39 (instruction -> instDo .)
    TkOd            reduce using rule 39 (instruction -> instDo .)
    TkRof           reduce using rule 39 (instruction -> instDo .)


state 15

    (40) instruction -> instFor .

    TkSemicolon     reduce using rule 40 (instruction -> instFor .)
    TkCBlock        reduce using rule 40 (instruction -> instFor .)
    TkFi            reduce using rule 40 (instruction -> instFor .)
    TkGuard         reduce using rule 40 (instruction -> instFor .)
    TkOd            reduce using rule 40 (instruction -> instFor .)
    TkRof           reduce using rule 40 (instruction -> instFor .)


state 16

    (22) instPrint -> TkPrint . printAble
    (23) instPrint -> TkPrint . instConcat
    (27) printAble -> . TkString
    (28) printAble -> . exp
    (25) instConcat -> . printAble TkConcat printAble
    (26) instConcat -> . instConcat TkConcat printAble
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkString        shift and go to state 33
    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    printAble                      shift and go to state 31
    instConcat                     shift and go to state 32
    exp                            shift and go to state 34
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 17

    (31) instAsig -> TkId . TkAsig arrayIni
    (32) instAsig -> TkId . TkAsig exp
    (33) instAsig -> TkId . TkAsig modArray

    TkAsig          shift and go to state 45


state 18

    (24) instSkip -> TkSkip .

    TkSemicolon     reduce using rule 24 (instSkip -> TkSkip .)
    TkCBlock        reduce using rule 24 (instSkip -> TkSkip .)
    TkFi            reduce using rule 24 (instSkip -> TkSkip .)
    TkGuard         reduce using rule 24 (instSkip -> TkSkip .)
    TkOd            reduce using rule 24 (instSkip -> TkSkip .)
    TkRof           reduce using rule 24 (instSkip -> TkSkip .)


state 19

    (67) instIf -> TkIf . guards TkFi
    (69) guards -> . guards TkGuard then
    (70) guards -> . then
    (71) then -> . exp TkArrow code
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    guards                         shift and go to state 46
    then                           shift and go to state 47
    exp                            shift and go to state 48
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 20

    (68) instDo -> TkDo . guards TkOd
    (69) guards -> . guards TkGuard then
    (70) guards -> . then
    (71) then -> . exp TkArrow code
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    guards                         shift and go to state 49
    then                           shift and go to state 47
    exp                            shift and go to state 48
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 21

    (65) instFor -> TkFor . range TkArrow code TkRof
    (66) range -> . TkId TkIn exp TkTo exp

    TkId            shift and go to state 51

    range                          shift and go to state 50

state 22

    (2) instBlock -> TkOBlock declare TkCBlock .

    $end            reduce using rule 2 (instBlock -> TkOBlock declare TkCBlock .)
    TkSemicolon     reduce using rule 2 (instBlock -> TkOBlock declare TkCBlock .)
    TkCBlock        reduce using rule 2 (instBlock -> TkOBlock declare TkCBlock .)
    TkFi            reduce using rule 2 (instBlock -> TkOBlock declare TkCBlock .)
    TkGuard         reduce using rule 2 (instBlock -> TkOBlock declare TkCBlock .)
    TkOd            reduce using rule 2 (instBlock -> TkOBlock declare TkCBlock .)
    TkRof           reduce using rule 2 (instBlock -> TkOBlock declare TkCBlock .)


state 23

    (3) instBlock -> TkOBlock declare code . TkCBlock

    TkCBlock        shift and go to state 52


state 24

    (4) instBlock -> TkOBlock code TkCBlock .

    $end            reduce using rule 4 (instBlock -> TkOBlock code TkCBlock .)
    TkSemicolon     reduce using rule 4 (instBlock -> TkOBlock code TkCBlock .)
    TkCBlock        reduce using rule 4 (instBlock -> TkOBlock code TkCBlock .)
    TkFi            reduce using rule 4 (instBlock -> TkOBlock code TkCBlock .)
    TkGuard         reduce using rule 4 (instBlock -> TkOBlock code TkCBlock .)
    TkOd            reduce using rule 4 (instBlock -> TkOBlock code TkCBlock .)
    TkRof           reduce using rule 4 (instBlock -> TkOBlock code TkCBlock .)


state 25

    (5) declare -> TkDeclare declaration .
    (10) seqDeclare -> declaration . TkSemicolon declaration

    TkCBlock        reduce using rule 5 (declare -> TkDeclare declaration .)
    TkPrint         reduce using rule 5 (declare -> TkDeclare declaration .)
    TkId            reduce using rule 5 (declare -> TkDeclare declaration .)
    TkSkip          reduce using rule 5 (declare -> TkDeclare declaration .)
    TkOBlock        reduce using rule 5 (declare -> TkDeclare declaration .)
    TkIf            reduce using rule 5 (declare -> TkDeclare declaration .)
    TkDo            reduce using rule 5 (declare -> TkDeclare declaration .)
    TkFor           reduce using rule 5 (declare -> TkDeclare declaration .)
    TkSemicolon     shift and go to state 53


state 26

    (6) declare -> TkDeclare seqDeclare .
    (11) seqDeclare -> seqDeclare . TkSemicolon declaration

    TkCBlock        reduce using rule 6 (declare -> TkDeclare seqDeclare .)
    TkPrint         reduce using rule 6 (declare -> TkDeclare seqDeclare .)
    TkId            reduce using rule 6 (declare -> TkDeclare seqDeclare .)
    TkSkip          reduce using rule 6 (declare -> TkDeclare seqDeclare .)
    TkOBlock        reduce using rule 6 (declare -> TkDeclare seqDeclare .)
    TkIf            reduce using rule 6 (declare -> TkDeclare seqDeclare .)
    TkDo            reduce using rule 6 (declare -> TkDeclare seqDeclare .)
    TkFor           reduce using rule 6 (declare -> TkDeclare seqDeclare .)
    TkSemicolon     shift and go to state 54


state 27

    (7) declaration -> DeclaList . TkTwoPoints type

    TkTwoPoints     shift and go to state 55


state 28

    (8) DeclaList -> TkId . TkComma DeclaList
    (9) DeclaList -> TkId .

    TkComma         shift and go to state 56
    TkTwoPoints     reduce using rule 9 (DeclaList -> TkId .)


state 29

    (20) sequencing -> instruction TkSemicolon . instruction
    (34) instruction -> . instPrint
    (35) instruction -> . instAsig
    (36) instruction -> . instSkip
    (37) instruction -> . instBlock
    (38) instruction -> . instIf
    (39) instruction -> . instDo
    (40) instruction -> . instFor
    (22) instPrint -> . TkPrint printAble
    (23) instPrint -> . TkPrint instConcat
    (31) instAsig -> . TkId TkAsig arrayIni
    (32) instAsig -> . TkId TkAsig exp
    (33) instAsig -> . TkId TkAsig modArray
    (24) instSkip -> . TkSkip
    (2) instBlock -> . TkOBlock declare TkCBlock
    (3) instBlock -> . TkOBlock declare code TkCBlock
    (4) instBlock -> . TkOBlock code TkCBlock
    (67) instIf -> . TkIf guards TkFi
    (68) instDo -> . TkDo guards TkOd
    (65) instFor -> . TkFor range TkArrow code TkRof

    TkPrint         shift and go to state 16
    TkId            shift and go to state 17
    TkSkip          shift and go to state 18
    TkOBlock        shift and go to state 3
    TkIf            shift and go to state 19
    TkDo            shift and go to state 20
    TkFor           shift and go to state 21

    instruction                    shift and go to state 57
    instPrint                      shift and go to state 9
    instAsig                       shift and go to state 10
    instSkip                       shift and go to state 11
    instBlock                      shift and go to state 12
    instIf                         shift and go to state 13
    instDo                         shift and go to state 14
    instFor                        shift and go to state 15

state 30

    (21) sequencing -> sequencing TkSemicolon . instruction
    (34) instruction -> . instPrint
    (35) instruction -> . instAsig
    (36) instruction -> . instSkip
    (37) instruction -> . instBlock
    (38) instruction -> . instIf
    (39) instruction -> . instDo
    (40) instruction -> . instFor
    (22) instPrint -> . TkPrint printAble
    (23) instPrint -> . TkPrint instConcat
    (31) instAsig -> . TkId TkAsig arrayIni
    (32) instAsig -> . TkId TkAsig exp
    (33) instAsig -> . TkId TkAsig modArray
    (24) instSkip -> . TkSkip
    (2) instBlock -> . TkOBlock declare TkCBlock
    (3) instBlock -> . TkOBlock declare code TkCBlock
    (4) instBlock -> . TkOBlock code TkCBlock
    (67) instIf -> . TkIf guards TkFi
    (68) instDo -> . TkDo guards TkOd
    (65) instFor -> . TkFor range TkArrow code TkRof

    TkPrint         shift and go to state 16
    TkId            shift and go to state 17
    TkSkip          shift and go to state 18
    TkOBlock        shift and go to state 3
    TkIf            shift and go to state 19
    TkDo            shift and go to state 20
    TkFor           shift and go to state 21

    instruction                    shift and go to state 58
    instPrint                      shift and go to state 9
    instAsig                       shift and go to state 10
    instSkip                       shift and go to state 11
    instBlock                      shift and go to state 12
    instIf                         shift and go to state 13
    instDo                         shift and go to state 14
    instFor                        shift and go to state 15

state 31

    (22) instPrint -> TkPrint printAble .
    (25) instConcat -> printAble . TkConcat printAble

    TkSemicolon     reduce using rule 22 (instPrint -> TkPrint printAble .)
    TkCBlock        reduce using rule 22 (instPrint -> TkPrint printAble .)
    TkFi            reduce using rule 22 (instPrint -> TkPrint printAble .)
    TkGuard         reduce using rule 22 (instPrint -> TkPrint printAble .)
    TkOd            reduce using rule 22 (instPrint -> TkPrint printAble .)
    TkRof           reduce using rule 22 (instPrint -> TkPrint printAble .)
    TkConcat        shift and go to state 59


state 32

    (23) instPrint -> TkPrint instConcat .
    (26) instConcat -> instConcat . TkConcat printAble

    TkSemicolon     reduce using rule 23 (instPrint -> TkPrint instConcat .)
    TkCBlock        reduce using rule 23 (instPrint -> TkPrint instConcat .)
    TkFi            reduce using rule 23 (instPrint -> TkPrint instConcat .)
    TkGuard         reduce using rule 23 (instPrint -> TkPrint instConcat .)
    TkOd            reduce using rule 23 (instPrint -> TkPrint instConcat .)
    TkRof           reduce using rule 23 (instPrint -> TkPrint instConcat .)
    TkConcat        shift and go to state 60


state 33

    (27) printAble -> TkString .

    TkConcat        reduce using rule 27 (printAble -> TkString .)
    TkSemicolon     reduce using rule 27 (printAble -> TkString .)
    TkCBlock        reduce using rule 27 (printAble -> TkString .)
    TkFi            reduce using rule 27 (printAble -> TkString .)
    TkGuard         reduce using rule 27 (printAble -> TkString .)
    TkOd            reduce using rule 27 (printAble -> TkString .)
    TkRof           reduce using rule 27 (printAble -> TkString .)


state 34

    (28) printAble -> exp .
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkConcat        reduce using rule 28 (printAble -> exp .)
    TkSemicolon     reduce using rule 28 (printAble -> exp .)
    TkCBlock        reduce using rule 28 (printAble -> exp .)
    TkFi            reduce using rule 28 (printAble -> exp .)
    TkGuard         reduce using rule 28 (printAble -> exp .)
    TkOd            reduce using rule 28 (printAble -> exp .)
    TkRof           reduce using rule 28 (printAble -> exp .)
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63
    TkAnd           shift and go to state 64
    TkOr            shift and go to state 65
    TkLess          shift and go to state 66
    TkLeq           shift and go to state 67
    TkGeq           shift and go to state 68
    TkGreater       shift and go to state 69
    TkEqual         shift and go to state 70
    TkNEqual        shift and go to state 71


state 35

    (60) exp -> TkMinus . exp
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    exp                            shift and go to state 72
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 36

    (57) exp -> TkNot . exp
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    exp                            shift and go to state 73
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 37

    (58) exp -> TkOpenPar . exp TkClosePar
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    exp                            shift and go to state 74
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 38

    (59) exp -> consArray .

    TkPlus          reduce using rule 59 (exp -> consArray .)
    TkMinus         reduce using rule 59 (exp -> consArray .)
    TkMult          reduce using rule 59 (exp -> consArray .)
    TkAnd           reduce using rule 59 (exp -> consArray .)
    TkOr            reduce using rule 59 (exp -> consArray .)
    TkLess          reduce using rule 59 (exp -> consArray .)
    TkLeq           reduce using rule 59 (exp -> consArray .)
    TkGeq           reduce using rule 59 (exp -> consArray .)
    TkGreater       reduce using rule 59 (exp -> consArray .)
    TkEqual         reduce using rule 59 (exp -> consArray .)
    TkNEqual        reduce using rule 59 (exp -> consArray .)
    TkConcat        reduce using rule 59 (exp -> consArray .)
    TkSemicolon     reduce using rule 59 (exp -> consArray .)
    TkCBlock        reduce using rule 59 (exp -> consArray .)
    TkFi            reduce using rule 59 (exp -> consArray .)
    TkGuard         reduce using rule 59 (exp -> consArray .)
    TkOd            reduce using rule 59 (exp -> consArray .)
    TkRof           reduce using rule 59 (exp -> consArray .)
    TkArrow         reduce using rule 59 (exp -> consArray .)
    TkClosePar      reduce using rule 59 (exp -> consArray .)
    TkComma         reduce using rule 59 (exp -> consArray .)
    TkCBracket      reduce using rule 59 (exp -> consArray .)
    TkTwoPoints     reduce using rule 59 (exp -> consArray .)
    TkTo            reduce using rule 59 (exp -> consArray .)


state 39

    (61) exp -> TkNum .

    TkPlus          reduce using rule 61 (exp -> TkNum .)
    TkMinus         reduce using rule 61 (exp -> TkNum .)
    TkMult          reduce using rule 61 (exp -> TkNum .)
    TkAnd           reduce using rule 61 (exp -> TkNum .)
    TkOr            reduce using rule 61 (exp -> TkNum .)
    TkLess          reduce using rule 61 (exp -> TkNum .)
    TkLeq           reduce using rule 61 (exp -> TkNum .)
    TkGeq           reduce using rule 61 (exp -> TkNum .)
    TkGreater       reduce using rule 61 (exp -> TkNum .)
    TkEqual         reduce using rule 61 (exp -> TkNum .)
    TkNEqual        reduce using rule 61 (exp -> TkNum .)
    TkConcat        reduce using rule 61 (exp -> TkNum .)
    TkSemicolon     reduce using rule 61 (exp -> TkNum .)
    TkCBlock        reduce using rule 61 (exp -> TkNum .)
    TkFi            reduce using rule 61 (exp -> TkNum .)
    TkGuard         reduce using rule 61 (exp -> TkNum .)
    TkOd            reduce using rule 61 (exp -> TkNum .)
    TkRof           reduce using rule 61 (exp -> TkNum .)
    TkArrow         reduce using rule 61 (exp -> TkNum .)
    TkClosePar      reduce using rule 61 (exp -> TkNum .)
    TkComma         reduce using rule 61 (exp -> TkNum .)
    TkCBracket      reduce using rule 61 (exp -> TkNum .)
    TkTwoPoints     reduce using rule 61 (exp -> TkNum .)
    TkTo            reduce using rule 61 (exp -> TkNum .)


state 40

    (62) exp -> TkTrue .

    TkPlus          reduce using rule 62 (exp -> TkTrue .)
    TkMinus         reduce using rule 62 (exp -> TkTrue .)
    TkMult          reduce using rule 62 (exp -> TkTrue .)
    TkAnd           reduce using rule 62 (exp -> TkTrue .)
    TkOr            reduce using rule 62 (exp -> TkTrue .)
    TkLess          reduce using rule 62 (exp -> TkTrue .)
    TkLeq           reduce using rule 62 (exp -> TkTrue .)
    TkGeq           reduce using rule 62 (exp -> TkTrue .)
    TkGreater       reduce using rule 62 (exp -> TkTrue .)
    TkEqual         reduce using rule 62 (exp -> TkTrue .)
    TkNEqual        reduce using rule 62 (exp -> TkTrue .)
    TkConcat        reduce using rule 62 (exp -> TkTrue .)
    TkSemicolon     reduce using rule 62 (exp -> TkTrue .)
    TkCBlock        reduce using rule 62 (exp -> TkTrue .)
    TkFi            reduce using rule 62 (exp -> TkTrue .)
    TkGuard         reduce using rule 62 (exp -> TkTrue .)
    TkOd            reduce using rule 62 (exp -> TkTrue .)
    TkRof           reduce using rule 62 (exp -> TkTrue .)
    TkArrow         reduce using rule 62 (exp -> TkTrue .)
    TkClosePar      reduce using rule 62 (exp -> TkTrue .)
    TkComma         reduce using rule 62 (exp -> TkTrue .)
    TkCBracket      reduce using rule 62 (exp -> TkTrue .)
    TkTwoPoints     reduce using rule 62 (exp -> TkTrue .)
    TkTo            reduce using rule 62 (exp -> TkTrue .)


state 41

    (63) exp -> TkFalse .

    TkPlus          reduce using rule 63 (exp -> TkFalse .)
    TkMinus         reduce using rule 63 (exp -> TkFalse .)
    TkMult          reduce using rule 63 (exp -> TkFalse .)
    TkAnd           reduce using rule 63 (exp -> TkFalse .)
    TkOr            reduce using rule 63 (exp -> TkFalse .)
    TkLess          reduce using rule 63 (exp -> TkFalse .)
    TkLeq           reduce using rule 63 (exp -> TkFalse .)
    TkGeq           reduce using rule 63 (exp -> TkFalse .)
    TkGreater       reduce using rule 63 (exp -> TkFalse .)
    TkEqual         reduce using rule 63 (exp -> TkFalse .)
    TkNEqual        reduce using rule 63 (exp -> TkFalse .)
    TkConcat        reduce using rule 63 (exp -> TkFalse .)
    TkSemicolon     reduce using rule 63 (exp -> TkFalse .)
    TkCBlock        reduce using rule 63 (exp -> TkFalse .)
    TkFi            reduce using rule 63 (exp -> TkFalse .)
    TkGuard         reduce using rule 63 (exp -> TkFalse .)
    TkOd            reduce using rule 63 (exp -> TkFalse .)
    TkRof           reduce using rule 63 (exp -> TkFalse .)
    TkArrow         reduce using rule 63 (exp -> TkFalse .)
    TkClosePar      reduce using rule 63 (exp -> TkFalse .)
    TkComma         reduce using rule 63 (exp -> TkFalse .)
    TkCBracket      reduce using rule 63 (exp -> TkFalse .)
    TkTwoPoints     reduce using rule 63 (exp -> TkFalse .)
    TkTo            reduce using rule 63 (exp -> TkFalse .)


state 42

    (64) exp -> TkId .
    (41) consArray -> TkId . TkOBracket exp TkCBracket
    (45) finish -> TkId . TkOpenPar exp TkTwoPoints exp TkClosePar

    TkPlus          reduce using rule 64 (exp -> TkId .)
    TkMinus         reduce using rule 64 (exp -> TkId .)
    TkMult          reduce using rule 64 (exp -> TkId .)
    TkAnd           reduce using rule 64 (exp -> TkId .)
    TkOr            reduce using rule 64 (exp -> TkId .)
    TkLess          reduce using rule 64 (exp -> TkId .)
    TkLeq           reduce using rule 64 (exp -> TkId .)
    TkGeq           reduce using rule 64 (exp -> TkId .)
    TkGreater       reduce using rule 64 (exp -> TkId .)
    TkEqual         reduce using rule 64 (exp -> TkId .)
    TkNEqual        reduce using rule 64 (exp -> TkId .)
    TkConcat        reduce using rule 64 (exp -> TkId .)
    TkSemicolon     reduce using rule 64 (exp -> TkId .)
    TkCBlock        reduce using rule 64 (exp -> TkId .)
    TkFi            reduce using rule 64 (exp -> TkId .)
    TkGuard         reduce using rule 64 (exp -> TkId .)
    TkOd            reduce using rule 64 (exp -> TkId .)
    TkRof           reduce using rule 64 (exp -> TkId .)
    TkArrow         reduce using rule 64 (exp -> TkId .)
    TkClosePar      reduce using rule 64 (exp -> TkId .)
    TkComma         reduce using rule 64 (exp -> TkId .)
    TkCBracket      reduce using rule 64 (exp -> TkId .)
    TkTwoPoints     reduce using rule 64 (exp -> TkId .)
    TkTo            reduce using rule 64 (exp -> TkId .)
    TkOBracket      shift and go to state 75
    TkOpenPar       shift and go to state 76


state 43

    (42) consArray -> modArray . TkOBracket exp TkCBracket
    (43) modArray -> modArray . TkOpenPar exp TkTwoPoints exp TkClosePar

    TkOBracket      shift and go to state 77
    TkOpenPar       shift and go to state 78


state 44

    (44) modArray -> finish .

    TkOBracket      reduce using rule 44 (modArray -> finish .)
    TkOpenPar       reduce using rule 44 (modArray -> finish .)
    TkSemicolon     reduce using rule 44 (modArray -> finish .)
    TkCBlock        reduce using rule 44 (modArray -> finish .)
    TkFi            reduce using rule 44 (modArray -> finish .)
    TkGuard         reduce using rule 44 (modArray -> finish .)
    TkOd            reduce using rule 44 (modArray -> finish .)
    TkRof           reduce using rule 44 (modArray -> finish .)


state 45

    (31) instAsig -> TkId TkAsig . arrayIni
    (32) instAsig -> TkId TkAsig . exp
    (33) instAsig -> TkId TkAsig . modArray
    (29) arrayIni -> . exp TkComma exp
    (30) arrayIni -> . arrayIni TkComma exp
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    arrayIni                       shift and go to state 79
    exp                            shift and go to state 80
    modArray                       shift and go to state 81
    consArray                      shift and go to state 38
    finish                         shift and go to state 44

state 46

    (67) instIf -> TkIf guards . TkFi
    (69) guards -> guards . TkGuard then

    TkFi            shift and go to state 82
    TkGuard         shift and go to state 83


state 47

    (70) guards -> then .

    TkFi            reduce using rule 70 (guards -> then .)
    TkGuard         reduce using rule 70 (guards -> then .)
    TkOd            reduce using rule 70 (guards -> then .)


state 48

    (71) then -> exp . TkArrow code
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkArrow         shift and go to state 84
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63
    TkAnd           shift and go to state 64
    TkOr            shift and go to state 65
    TkLess          shift and go to state 66
    TkLeq           shift and go to state 67
    TkGeq           shift and go to state 68
    TkGreater       shift and go to state 69
    TkEqual         shift and go to state 70
    TkNEqual        shift and go to state 71


state 49

    (68) instDo -> TkDo guards . TkOd
    (69) guards -> guards . TkGuard then

    TkOd            shift and go to state 85
    TkGuard         shift and go to state 83


state 50

    (65) instFor -> TkFor range . TkArrow code TkRof

    TkArrow         shift and go to state 86


state 51

    (66) range -> TkId . TkIn exp TkTo exp

    TkIn            shift and go to state 87


state 52

    (3) instBlock -> TkOBlock declare code TkCBlock .

    $end            reduce using rule 3 (instBlock -> TkOBlock declare code TkCBlock .)
    TkSemicolon     reduce using rule 3 (instBlock -> TkOBlock declare code TkCBlock .)
    TkCBlock        reduce using rule 3 (instBlock -> TkOBlock declare code TkCBlock .)
    TkFi            reduce using rule 3 (instBlock -> TkOBlock declare code TkCBlock .)
    TkGuard         reduce using rule 3 (instBlock -> TkOBlock declare code TkCBlock .)
    TkOd            reduce using rule 3 (instBlock -> TkOBlock declare code TkCBlock .)
    TkRof           reduce using rule 3 (instBlock -> TkOBlock declare code TkCBlock .)


state 53

    (10) seqDeclare -> declaration TkSemicolon . declaration
    (7) declaration -> . DeclaList TkTwoPoints type
    (8) DeclaList -> . TkId TkComma DeclaList
    (9) DeclaList -> . TkId

    TkId            shift and go to state 28

    declaration                    shift and go to state 88
    DeclaList                      shift and go to state 27

state 54

    (11) seqDeclare -> seqDeclare TkSemicolon . declaration
    (7) declaration -> . DeclaList TkTwoPoints type
    (8) DeclaList -> . TkId TkComma DeclaList
    (9) DeclaList -> . TkId

    TkId            shift and go to state 28

    declaration                    shift and go to state 89
    DeclaList                      shift and go to state 27

state 55

    (7) declaration -> DeclaList TkTwoPoints . type
    (12) type -> . TkInt
    (13) type -> . TkBool
    (14) type -> . TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket
    (15) type -> . TkArray TkOBracket TkMinus TkNum TkSoForth TkMinus TkNum TkCBracket
    (16) type -> . TkArray TkOBracket TkNum TkSoForth TkMinus TkNum TkCBracket
    (17) type -> . TkArray TkOBracket TkMinus TkNum TkSoForth TkNum TkCBracket

    TkInt           shift and go to state 91
    TkBool          shift and go to state 92
    TkArray         shift and go to state 93

    type                           shift and go to state 90

state 56

    (8) DeclaList -> TkId TkComma . DeclaList
    (8) DeclaList -> . TkId TkComma DeclaList
    (9) DeclaList -> . TkId

    TkId            shift and go to state 28

    DeclaList                      shift and go to state 94

state 57

    (20) sequencing -> instruction TkSemicolon instruction .

    TkSemicolon     reduce using rule 20 (sequencing -> instruction TkSemicolon instruction .)
    TkCBlock        reduce using rule 20 (sequencing -> instruction TkSemicolon instruction .)
    TkFi            reduce using rule 20 (sequencing -> instruction TkSemicolon instruction .)
    TkGuard         reduce using rule 20 (sequencing -> instruction TkSemicolon instruction .)
    TkOd            reduce using rule 20 (sequencing -> instruction TkSemicolon instruction .)
    TkRof           reduce using rule 20 (sequencing -> instruction TkSemicolon instruction .)


state 58

    (21) sequencing -> sequencing TkSemicolon instruction .

    TkSemicolon     reduce using rule 21 (sequencing -> sequencing TkSemicolon instruction .)
    TkCBlock        reduce using rule 21 (sequencing -> sequencing TkSemicolon instruction .)
    TkFi            reduce using rule 21 (sequencing -> sequencing TkSemicolon instruction .)
    TkGuard         reduce using rule 21 (sequencing -> sequencing TkSemicolon instruction .)
    TkOd            reduce using rule 21 (sequencing -> sequencing TkSemicolon instruction .)
    TkRof           reduce using rule 21 (sequencing -> sequencing TkSemicolon instruction .)


state 59

    (25) instConcat -> printAble TkConcat . printAble
    (27) printAble -> . TkString
    (28) printAble -> . exp
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkString        shift and go to state 33
    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    printAble                      shift and go to state 95
    exp                            shift and go to state 34
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 60

    (26) instConcat -> instConcat TkConcat . printAble
    (27) printAble -> . TkString
    (28) printAble -> . exp
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkString        shift and go to state 33
    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    printAble                      shift and go to state 96
    exp                            shift and go to state 34
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 61

    (46) exp -> exp TkPlus . exp
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    exp                            shift and go to state 97
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 62

    (47) exp -> exp TkMinus . exp
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    exp                            shift and go to state 98
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 63

    (48) exp -> exp TkMult . exp
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    exp                            shift and go to state 99
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 64

    (49) exp -> exp TkAnd . exp
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    exp                            shift and go to state 100
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 65

    (50) exp -> exp TkOr . exp
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    exp                            shift and go to state 101
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 66

    (51) exp -> exp TkLess . exp
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    exp                            shift and go to state 102
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 67

    (52) exp -> exp TkLeq . exp
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    exp                            shift and go to state 103
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 68

    (53) exp -> exp TkGeq . exp
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    exp                            shift and go to state 104
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 69

    (54) exp -> exp TkGreater . exp
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    exp                            shift and go to state 105
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 70

    (55) exp -> exp TkEqual . exp
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    exp                            shift and go to state 106
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 71

    (56) exp -> exp TkNEqual . exp
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    exp                            shift and go to state 107
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 72

    (60) exp -> TkMinus exp .
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkPlus          reduce using rule 60 (exp -> TkMinus exp .)
    TkMinus         reduce using rule 60 (exp -> TkMinus exp .)
    TkMult          reduce using rule 60 (exp -> TkMinus exp .)
    TkAnd           reduce using rule 60 (exp -> TkMinus exp .)
    TkOr            reduce using rule 60 (exp -> TkMinus exp .)
    TkLess          reduce using rule 60 (exp -> TkMinus exp .)
    TkLeq           reduce using rule 60 (exp -> TkMinus exp .)
    TkGeq           reduce using rule 60 (exp -> TkMinus exp .)
    TkGreater       reduce using rule 60 (exp -> TkMinus exp .)
    TkEqual         reduce using rule 60 (exp -> TkMinus exp .)
    TkNEqual        reduce using rule 60 (exp -> TkMinus exp .)
    TkConcat        reduce using rule 60 (exp -> TkMinus exp .)
    TkSemicolon     reduce using rule 60 (exp -> TkMinus exp .)
    TkCBlock        reduce using rule 60 (exp -> TkMinus exp .)
    TkFi            reduce using rule 60 (exp -> TkMinus exp .)
    TkGuard         reduce using rule 60 (exp -> TkMinus exp .)
    TkOd            reduce using rule 60 (exp -> TkMinus exp .)
    TkRof           reduce using rule 60 (exp -> TkMinus exp .)
    TkArrow         reduce using rule 60 (exp -> TkMinus exp .)
    TkClosePar      reduce using rule 60 (exp -> TkMinus exp .)
    TkComma         reduce using rule 60 (exp -> TkMinus exp .)
    TkCBracket      reduce using rule 60 (exp -> TkMinus exp .)
    TkTwoPoints     reduce using rule 60 (exp -> TkMinus exp .)
    TkTo            reduce using rule 60 (exp -> TkMinus exp .)

  ! TkPlus          [ shift and go to state 61 ]
  ! TkMinus         [ shift and go to state 62 ]
  ! TkMult          [ shift and go to state 63 ]
  ! TkAnd           [ shift and go to state 64 ]
  ! TkOr            [ shift and go to state 65 ]
  ! TkLess          [ shift and go to state 66 ]
  ! TkLeq           [ shift and go to state 67 ]
  ! TkGeq           [ shift and go to state 68 ]
  ! TkGreater       [ shift and go to state 69 ]
  ! TkEqual         [ shift and go to state 70 ]
  ! TkNEqual        [ shift and go to state 71 ]


state 73

    (57) exp -> TkNot exp .
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkAnd           reduce using rule 57 (exp -> TkNot exp .)
    TkOr            reduce using rule 57 (exp -> TkNot exp .)
    TkConcat        reduce using rule 57 (exp -> TkNot exp .)
    TkSemicolon     reduce using rule 57 (exp -> TkNot exp .)
    TkCBlock        reduce using rule 57 (exp -> TkNot exp .)
    TkFi            reduce using rule 57 (exp -> TkNot exp .)
    TkGuard         reduce using rule 57 (exp -> TkNot exp .)
    TkOd            reduce using rule 57 (exp -> TkNot exp .)
    TkRof           reduce using rule 57 (exp -> TkNot exp .)
    TkArrow         reduce using rule 57 (exp -> TkNot exp .)
    TkClosePar      reduce using rule 57 (exp -> TkNot exp .)
    TkComma         reduce using rule 57 (exp -> TkNot exp .)
    TkCBracket      reduce using rule 57 (exp -> TkNot exp .)
    TkTwoPoints     reduce using rule 57 (exp -> TkNot exp .)
    TkTo            reduce using rule 57 (exp -> TkNot exp .)
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63
    TkLess          shift and go to state 66
    TkLeq           shift and go to state 67
    TkGeq           shift and go to state 68
    TkGreater       shift and go to state 69
    TkEqual         shift and go to state 70
    TkNEqual        shift and go to state 71

  ! TkPlus          [ reduce using rule 57 (exp -> TkNot exp .) ]
  ! TkMinus         [ reduce using rule 57 (exp -> TkNot exp .) ]
  ! TkMult          [ reduce using rule 57 (exp -> TkNot exp .) ]
  ! TkLess          [ reduce using rule 57 (exp -> TkNot exp .) ]
  ! TkLeq           [ reduce using rule 57 (exp -> TkNot exp .) ]
  ! TkGeq           [ reduce using rule 57 (exp -> TkNot exp .) ]
  ! TkGreater       [ reduce using rule 57 (exp -> TkNot exp .) ]
  ! TkEqual         [ reduce using rule 57 (exp -> TkNot exp .) ]
  ! TkNEqual        [ reduce using rule 57 (exp -> TkNot exp .) ]
  ! TkAnd           [ shift and go to state 64 ]
  ! TkOr            [ shift and go to state 65 ]


state 74

    (58) exp -> TkOpenPar exp . TkClosePar
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkClosePar      shift and go to state 108
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63
    TkAnd           shift and go to state 64
    TkOr            shift and go to state 65
    TkLess          shift and go to state 66
    TkLeq           shift and go to state 67
    TkGeq           shift and go to state 68
    TkGreater       shift and go to state 69
    TkEqual         shift and go to state 70
    TkNEqual        shift and go to state 71


state 75

    (41) consArray -> TkId TkOBracket . exp TkCBracket
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    exp                            shift and go to state 109
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 76

    (45) finish -> TkId TkOpenPar . exp TkTwoPoints exp TkClosePar
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    exp                            shift and go to state 110
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 77

    (42) consArray -> modArray TkOBracket . exp TkCBracket
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    modArray                       shift and go to state 43
    exp                            shift and go to state 111
    consArray                      shift and go to state 38
    finish                         shift and go to state 44

state 78

    (43) modArray -> modArray TkOpenPar . exp TkTwoPoints exp TkClosePar
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    modArray                       shift and go to state 43
    exp                            shift and go to state 112
    consArray                      shift and go to state 38
    finish                         shift and go to state 44

state 79

    (31) instAsig -> TkId TkAsig arrayIni .
    (30) arrayIni -> arrayIni . TkComma exp

    TkSemicolon     reduce using rule 31 (instAsig -> TkId TkAsig arrayIni .)
    TkCBlock        reduce using rule 31 (instAsig -> TkId TkAsig arrayIni .)
    TkFi            reduce using rule 31 (instAsig -> TkId TkAsig arrayIni .)
    TkGuard         reduce using rule 31 (instAsig -> TkId TkAsig arrayIni .)
    TkOd            reduce using rule 31 (instAsig -> TkId TkAsig arrayIni .)
    TkRof           reduce using rule 31 (instAsig -> TkId TkAsig arrayIni .)
    TkComma         shift and go to state 113


state 80

    (32) instAsig -> TkId TkAsig exp .
    (29) arrayIni -> exp . TkComma exp
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkSemicolon     reduce using rule 32 (instAsig -> TkId TkAsig exp .)
    TkCBlock        reduce using rule 32 (instAsig -> TkId TkAsig exp .)
    TkFi            reduce using rule 32 (instAsig -> TkId TkAsig exp .)
    TkGuard         reduce using rule 32 (instAsig -> TkId TkAsig exp .)
    TkOd            reduce using rule 32 (instAsig -> TkId TkAsig exp .)
    TkRof           reduce using rule 32 (instAsig -> TkId TkAsig exp .)
    TkComma         shift and go to state 114
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63
    TkAnd           shift and go to state 64
    TkOr            shift and go to state 65
    TkLess          shift and go to state 66
    TkLeq           shift and go to state 67
    TkGeq           shift and go to state 68
    TkGreater       shift and go to state 69
    TkEqual         shift and go to state 70
    TkNEqual        shift and go to state 71


state 81

    (33) instAsig -> TkId TkAsig modArray .
    (43) modArray -> modArray . TkOpenPar exp TkTwoPoints exp TkClosePar
    (42) consArray -> modArray . TkOBracket exp TkCBracket

    TkSemicolon     reduce using rule 33 (instAsig -> TkId TkAsig modArray .)
    TkCBlock        reduce using rule 33 (instAsig -> TkId TkAsig modArray .)
    TkFi            reduce using rule 33 (instAsig -> TkId TkAsig modArray .)
    TkGuard         reduce using rule 33 (instAsig -> TkId TkAsig modArray .)
    TkOd            reduce using rule 33 (instAsig -> TkId TkAsig modArray .)
    TkRof           reduce using rule 33 (instAsig -> TkId TkAsig modArray .)
    TkOpenPar       shift and go to state 78
    TkOBracket      shift and go to state 77


state 82

    (67) instIf -> TkIf guards TkFi .

    TkSemicolon     reduce using rule 67 (instIf -> TkIf guards TkFi .)
    TkCBlock        reduce using rule 67 (instIf -> TkIf guards TkFi .)
    TkFi            reduce using rule 67 (instIf -> TkIf guards TkFi .)
    TkGuard         reduce using rule 67 (instIf -> TkIf guards TkFi .)
    TkOd            reduce using rule 67 (instIf -> TkIf guards TkFi .)
    TkRof           reduce using rule 67 (instIf -> TkIf guards TkFi .)


state 83

    (69) guards -> guards TkGuard . then
    (71) then -> . exp TkArrow code
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    then                           shift and go to state 115
    exp                            shift and go to state 48
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 84

    (71) then -> exp TkArrow . code
    (18) code -> . instruction
    (19) code -> . sequencing
    (34) instruction -> . instPrint
    (35) instruction -> . instAsig
    (36) instruction -> . instSkip
    (37) instruction -> . instBlock
    (38) instruction -> . instIf
    (39) instruction -> . instDo
    (40) instruction -> . instFor
    (20) sequencing -> . instruction TkSemicolon instruction
    (21) sequencing -> . sequencing TkSemicolon instruction
    (22) instPrint -> . TkPrint printAble
    (23) instPrint -> . TkPrint instConcat
    (31) instAsig -> . TkId TkAsig arrayIni
    (32) instAsig -> . TkId TkAsig exp
    (33) instAsig -> . TkId TkAsig modArray
    (24) instSkip -> . TkSkip
    (2) instBlock -> . TkOBlock declare TkCBlock
    (3) instBlock -> . TkOBlock declare code TkCBlock
    (4) instBlock -> . TkOBlock code TkCBlock
    (67) instIf -> . TkIf guards TkFi
    (68) instDo -> . TkDo guards TkOd
    (65) instFor -> . TkFor range TkArrow code TkRof

    TkPrint         shift and go to state 16
    TkId            shift and go to state 17
    TkSkip          shift and go to state 18
    TkOBlock        shift and go to state 3
    TkIf            shift and go to state 19
    TkDo            shift and go to state 20
    TkFor           shift and go to state 21

    code                           shift and go to state 116
    instruction                    shift and go to state 7
    sequencing                     shift and go to state 8
    instPrint                      shift and go to state 9
    instAsig                       shift and go to state 10
    instSkip                       shift and go to state 11
    instBlock                      shift and go to state 12
    instIf                         shift and go to state 13
    instDo                         shift and go to state 14
    instFor                        shift and go to state 15

state 85

    (68) instDo -> TkDo guards TkOd .

    TkSemicolon     reduce using rule 68 (instDo -> TkDo guards TkOd .)
    TkCBlock        reduce using rule 68 (instDo -> TkDo guards TkOd .)
    TkFi            reduce using rule 68 (instDo -> TkDo guards TkOd .)
    TkGuard         reduce using rule 68 (instDo -> TkDo guards TkOd .)
    TkOd            reduce using rule 68 (instDo -> TkDo guards TkOd .)
    TkRof           reduce using rule 68 (instDo -> TkDo guards TkOd .)


state 86

    (65) instFor -> TkFor range TkArrow . code TkRof
    (18) code -> . instruction
    (19) code -> . sequencing
    (34) instruction -> . instPrint
    (35) instruction -> . instAsig
    (36) instruction -> . instSkip
    (37) instruction -> . instBlock
    (38) instruction -> . instIf
    (39) instruction -> . instDo
    (40) instruction -> . instFor
    (20) sequencing -> . instruction TkSemicolon instruction
    (21) sequencing -> . sequencing TkSemicolon instruction
    (22) instPrint -> . TkPrint printAble
    (23) instPrint -> . TkPrint instConcat
    (31) instAsig -> . TkId TkAsig arrayIni
    (32) instAsig -> . TkId TkAsig exp
    (33) instAsig -> . TkId TkAsig modArray
    (24) instSkip -> . TkSkip
    (2) instBlock -> . TkOBlock declare TkCBlock
    (3) instBlock -> . TkOBlock declare code TkCBlock
    (4) instBlock -> . TkOBlock code TkCBlock
    (67) instIf -> . TkIf guards TkFi
    (68) instDo -> . TkDo guards TkOd
    (65) instFor -> . TkFor range TkArrow code TkRof

    TkPrint         shift and go to state 16
    TkId            shift and go to state 17
    TkSkip          shift and go to state 18
    TkOBlock        shift and go to state 3
    TkIf            shift and go to state 19
    TkDo            shift and go to state 20
    TkFor           shift and go to state 21

    code                           shift and go to state 117
    instruction                    shift and go to state 7
    sequencing                     shift and go to state 8
    instPrint                      shift and go to state 9
    instAsig                       shift and go to state 10
    instSkip                       shift and go to state 11
    instBlock                      shift and go to state 12
    instIf                         shift and go to state 13
    instDo                         shift and go to state 14
    instFor                        shift and go to state 15

state 87

    (66) range -> TkId TkIn . exp TkTo exp
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    exp                            shift and go to state 118
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 88

    (10) seqDeclare -> declaration TkSemicolon declaration .

    TkSemicolon     reduce using rule 10 (seqDeclare -> declaration TkSemicolon declaration .)
    TkCBlock        reduce using rule 10 (seqDeclare -> declaration TkSemicolon declaration .)
    TkPrint         reduce using rule 10 (seqDeclare -> declaration TkSemicolon declaration .)
    TkId            reduce using rule 10 (seqDeclare -> declaration TkSemicolon declaration .)
    TkSkip          reduce using rule 10 (seqDeclare -> declaration TkSemicolon declaration .)
    TkOBlock        reduce using rule 10 (seqDeclare -> declaration TkSemicolon declaration .)
    TkIf            reduce using rule 10 (seqDeclare -> declaration TkSemicolon declaration .)
    TkDo            reduce using rule 10 (seqDeclare -> declaration TkSemicolon declaration .)
    TkFor           reduce using rule 10 (seqDeclare -> declaration TkSemicolon declaration .)


state 89

    (11) seqDeclare -> seqDeclare TkSemicolon declaration .

    TkSemicolon     reduce using rule 11 (seqDeclare -> seqDeclare TkSemicolon declaration .)
    TkCBlock        reduce using rule 11 (seqDeclare -> seqDeclare TkSemicolon declaration .)
    TkPrint         reduce using rule 11 (seqDeclare -> seqDeclare TkSemicolon declaration .)
    TkId            reduce using rule 11 (seqDeclare -> seqDeclare TkSemicolon declaration .)
    TkSkip          reduce using rule 11 (seqDeclare -> seqDeclare TkSemicolon declaration .)
    TkOBlock        reduce using rule 11 (seqDeclare -> seqDeclare TkSemicolon declaration .)
    TkIf            reduce using rule 11 (seqDeclare -> seqDeclare TkSemicolon declaration .)
    TkDo            reduce using rule 11 (seqDeclare -> seqDeclare TkSemicolon declaration .)
    TkFor           reduce using rule 11 (seqDeclare -> seqDeclare TkSemicolon declaration .)


state 90

    (7) declaration -> DeclaList TkTwoPoints type .

    TkSemicolon     reduce using rule 7 (declaration -> DeclaList TkTwoPoints type .)
    TkCBlock        reduce using rule 7 (declaration -> DeclaList TkTwoPoints type .)
    TkPrint         reduce using rule 7 (declaration -> DeclaList TkTwoPoints type .)
    TkId            reduce using rule 7 (declaration -> DeclaList TkTwoPoints type .)
    TkSkip          reduce using rule 7 (declaration -> DeclaList TkTwoPoints type .)
    TkOBlock        reduce using rule 7 (declaration -> DeclaList TkTwoPoints type .)
    TkIf            reduce using rule 7 (declaration -> DeclaList TkTwoPoints type .)
    TkDo            reduce using rule 7 (declaration -> DeclaList TkTwoPoints type .)
    TkFor           reduce using rule 7 (declaration -> DeclaList TkTwoPoints type .)


state 91

    (12) type -> TkInt .

    TkSemicolon     reduce using rule 12 (type -> TkInt .)
    TkCBlock        reduce using rule 12 (type -> TkInt .)
    TkPrint         reduce using rule 12 (type -> TkInt .)
    TkId            reduce using rule 12 (type -> TkInt .)
    TkSkip          reduce using rule 12 (type -> TkInt .)
    TkOBlock        reduce using rule 12 (type -> TkInt .)
    TkIf            reduce using rule 12 (type -> TkInt .)
    TkDo            reduce using rule 12 (type -> TkInt .)
    TkFor           reduce using rule 12 (type -> TkInt .)


state 92

    (13) type -> TkBool .

    TkSemicolon     reduce using rule 13 (type -> TkBool .)
    TkCBlock        reduce using rule 13 (type -> TkBool .)
    TkPrint         reduce using rule 13 (type -> TkBool .)
    TkId            reduce using rule 13 (type -> TkBool .)
    TkSkip          reduce using rule 13 (type -> TkBool .)
    TkOBlock        reduce using rule 13 (type -> TkBool .)
    TkIf            reduce using rule 13 (type -> TkBool .)
    TkDo            reduce using rule 13 (type -> TkBool .)
    TkFor           reduce using rule 13 (type -> TkBool .)


state 93

    (14) type -> TkArray . TkOBracket TkNum TkSoForth TkNum TkCBracket
    (15) type -> TkArray . TkOBracket TkMinus TkNum TkSoForth TkMinus TkNum TkCBracket
    (16) type -> TkArray . TkOBracket TkNum TkSoForth TkMinus TkNum TkCBracket
    (17) type -> TkArray . TkOBracket TkMinus TkNum TkSoForth TkNum TkCBracket

    TkOBracket      shift and go to state 119


state 94

    (8) DeclaList -> TkId TkComma DeclaList .

    TkTwoPoints     reduce using rule 8 (DeclaList -> TkId TkComma DeclaList .)


state 95

    (25) instConcat -> printAble TkConcat printAble .

    TkConcat        reduce using rule 25 (instConcat -> printAble TkConcat printAble .)
    TkSemicolon     reduce using rule 25 (instConcat -> printAble TkConcat printAble .)
    TkCBlock        reduce using rule 25 (instConcat -> printAble TkConcat printAble .)
    TkFi            reduce using rule 25 (instConcat -> printAble TkConcat printAble .)
    TkGuard         reduce using rule 25 (instConcat -> printAble TkConcat printAble .)
    TkOd            reduce using rule 25 (instConcat -> printAble TkConcat printAble .)
    TkRof           reduce using rule 25 (instConcat -> printAble TkConcat printAble .)


state 96

    (26) instConcat -> instConcat TkConcat printAble .

    TkConcat        reduce using rule 26 (instConcat -> instConcat TkConcat printAble .)
    TkSemicolon     reduce using rule 26 (instConcat -> instConcat TkConcat printAble .)
    TkCBlock        reduce using rule 26 (instConcat -> instConcat TkConcat printAble .)
    TkFi            reduce using rule 26 (instConcat -> instConcat TkConcat printAble .)
    TkGuard         reduce using rule 26 (instConcat -> instConcat TkConcat printAble .)
    TkOd            reduce using rule 26 (instConcat -> instConcat TkConcat printAble .)
    TkRof           reduce using rule 26 (instConcat -> instConcat TkConcat printAble .)


state 97

    (46) exp -> exp TkPlus exp .
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkPlus          reduce using rule 46 (exp -> exp TkPlus exp .)
    TkMinus         reduce using rule 46 (exp -> exp TkPlus exp .)
    TkAnd           reduce using rule 46 (exp -> exp TkPlus exp .)
    TkOr            reduce using rule 46 (exp -> exp TkPlus exp .)
    TkLess          reduce using rule 46 (exp -> exp TkPlus exp .)
    TkLeq           reduce using rule 46 (exp -> exp TkPlus exp .)
    TkGeq           reduce using rule 46 (exp -> exp TkPlus exp .)
    TkGreater       reduce using rule 46 (exp -> exp TkPlus exp .)
    TkEqual         reduce using rule 46 (exp -> exp TkPlus exp .)
    TkNEqual        reduce using rule 46 (exp -> exp TkPlus exp .)
    TkConcat        reduce using rule 46 (exp -> exp TkPlus exp .)
    TkSemicolon     reduce using rule 46 (exp -> exp TkPlus exp .)
    TkCBlock        reduce using rule 46 (exp -> exp TkPlus exp .)
    TkFi            reduce using rule 46 (exp -> exp TkPlus exp .)
    TkGuard         reduce using rule 46 (exp -> exp TkPlus exp .)
    TkOd            reduce using rule 46 (exp -> exp TkPlus exp .)
    TkRof           reduce using rule 46 (exp -> exp TkPlus exp .)
    TkArrow         reduce using rule 46 (exp -> exp TkPlus exp .)
    TkClosePar      reduce using rule 46 (exp -> exp TkPlus exp .)
    TkComma         reduce using rule 46 (exp -> exp TkPlus exp .)
    TkCBracket      reduce using rule 46 (exp -> exp TkPlus exp .)
    TkTwoPoints     reduce using rule 46 (exp -> exp TkPlus exp .)
    TkTo            reduce using rule 46 (exp -> exp TkPlus exp .)
    TkMult          shift and go to state 63

  ! TkMult          [ reduce using rule 46 (exp -> exp TkPlus exp .) ]
  ! TkPlus          [ shift and go to state 61 ]
  ! TkMinus         [ shift and go to state 62 ]
  ! TkAnd           [ shift and go to state 64 ]
  ! TkOr            [ shift and go to state 65 ]
  ! TkLess          [ shift and go to state 66 ]
  ! TkLeq           [ shift and go to state 67 ]
  ! TkGeq           [ shift and go to state 68 ]
  ! TkGreater       [ shift and go to state 69 ]
  ! TkEqual         [ shift and go to state 70 ]
  ! TkNEqual        [ shift and go to state 71 ]


state 98

    (47) exp -> exp TkMinus exp .
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkPlus          reduce using rule 47 (exp -> exp TkMinus exp .)
    TkMinus         reduce using rule 47 (exp -> exp TkMinus exp .)
    TkAnd           reduce using rule 47 (exp -> exp TkMinus exp .)
    TkOr            reduce using rule 47 (exp -> exp TkMinus exp .)
    TkLess          reduce using rule 47 (exp -> exp TkMinus exp .)
    TkLeq           reduce using rule 47 (exp -> exp TkMinus exp .)
    TkGeq           reduce using rule 47 (exp -> exp TkMinus exp .)
    TkGreater       reduce using rule 47 (exp -> exp TkMinus exp .)
    TkEqual         reduce using rule 47 (exp -> exp TkMinus exp .)
    TkNEqual        reduce using rule 47 (exp -> exp TkMinus exp .)
    TkConcat        reduce using rule 47 (exp -> exp TkMinus exp .)
    TkSemicolon     reduce using rule 47 (exp -> exp TkMinus exp .)
    TkCBlock        reduce using rule 47 (exp -> exp TkMinus exp .)
    TkFi            reduce using rule 47 (exp -> exp TkMinus exp .)
    TkGuard         reduce using rule 47 (exp -> exp TkMinus exp .)
    TkOd            reduce using rule 47 (exp -> exp TkMinus exp .)
    TkRof           reduce using rule 47 (exp -> exp TkMinus exp .)
    TkArrow         reduce using rule 47 (exp -> exp TkMinus exp .)
    TkClosePar      reduce using rule 47 (exp -> exp TkMinus exp .)
    TkComma         reduce using rule 47 (exp -> exp TkMinus exp .)
    TkCBracket      reduce using rule 47 (exp -> exp TkMinus exp .)
    TkTwoPoints     reduce using rule 47 (exp -> exp TkMinus exp .)
    TkTo            reduce using rule 47 (exp -> exp TkMinus exp .)
    TkMult          shift and go to state 63

  ! TkMult          [ reduce using rule 47 (exp -> exp TkMinus exp .) ]
  ! TkPlus          [ shift and go to state 61 ]
  ! TkMinus         [ shift and go to state 62 ]
  ! TkAnd           [ shift and go to state 64 ]
  ! TkOr            [ shift and go to state 65 ]
  ! TkLess          [ shift and go to state 66 ]
  ! TkLeq           [ shift and go to state 67 ]
  ! TkGeq           [ shift and go to state 68 ]
  ! TkGreater       [ shift and go to state 69 ]
  ! TkEqual         [ shift and go to state 70 ]
  ! TkNEqual        [ shift and go to state 71 ]


state 99

    (48) exp -> exp TkMult exp .
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkPlus          reduce using rule 48 (exp -> exp TkMult exp .)
    TkMinus         reduce using rule 48 (exp -> exp TkMult exp .)
    TkMult          reduce using rule 48 (exp -> exp TkMult exp .)
    TkAnd           reduce using rule 48 (exp -> exp TkMult exp .)
    TkOr            reduce using rule 48 (exp -> exp TkMult exp .)
    TkLess          reduce using rule 48 (exp -> exp TkMult exp .)
    TkLeq           reduce using rule 48 (exp -> exp TkMult exp .)
    TkGeq           reduce using rule 48 (exp -> exp TkMult exp .)
    TkGreater       reduce using rule 48 (exp -> exp TkMult exp .)
    TkEqual         reduce using rule 48 (exp -> exp TkMult exp .)
    TkNEqual        reduce using rule 48 (exp -> exp TkMult exp .)
    TkConcat        reduce using rule 48 (exp -> exp TkMult exp .)
    TkSemicolon     reduce using rule 48 (exp -> exp TkMult exp .)
    TkCBlock        reduce using rule 48 (exp -> exp TkMult exp .)
    TkFi            reduce using rule 48 (exp -> exp TkMult exp .)
    TkGuard         reduce using rule 48 (exp -> exp TkMult exp .)
    TkOd            reduce using rule 48 (exp -> exp TkMult exp .)
    TkRof           reduce using rule 48 (exp -> exp TkMult exp .)
    TkArrow         reduce using rule 48 (exp -> exp TkMult exp .)
    TkClosePar      reduce using rule 48 (exp -> exp TkMult exp .)
    TkComma         reduce using rule 48 (exp -> exp TkMult exp .)
    TkCBracket      reduce using rule 48 (exp -> exp TkMult exp .)
    TkTwoPoints     reduce using rule 48 (exp -> exp TkMult exp .)
    TkTo            reduce using rule 48 (exp -> exp TkMult exp .)

  ! TkPlus          [ shift and go to state 61 ]
  ! TkMinus         [ shift and go to state 62 ]
  ! TkMult          [ shift and go to state 63 ]
  ! TkAnd           [ shift and go to state 64 ]
  ! TkOr            [ shift and go to state 65 ]
  ! TkLess          [ shift and go to state 66 ]
  ! TkLeq           [ shift and go to state 67 ]
  ! TkGeq           [ shift and go to state 68 ]
  ! TkGreater       [ shift and go to state 69 ]
  ! TkEqual         [ shift and go to state 70 ]
  ! TkNEqual        [ shift and go to state 71 ]


state 100

    (49) exp -> exp TkAnd exp .
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkAnd           reduce using rule 49 (exp -> exp TkAnd exp .)
    TkOr            reduce using rule 49 (exp -> exp TkAnd exp .)
    TkConcat        reduce using rule 49 (exp -> exp TkAnd exp .)
    TkSemicolon     reduce using rule 49 (exp -> exp TkAnd exp .)
    TkCBlock        reduce using rule 49 (exp -> exp TkAnd exp .)
    TkFi            reduce using rule 49 (exp -> exp TkAnd exp .)
    TkGuard         reduce using rule 49 (exp -> exp TkAnd exp .)
    TkOd            reduce using rule 49 (exp -> exp TkAnd exp .)
    TkRof           reduce using rule 49 (exp -> exp TkAnd exp .)
    TkArrow         reduce using rule 49 (exp -> exp TkAnd exp .)
    TkClosePar      reduce using rule 49 (exp -> exp TkAnd exp .)
    TkComma         reduce using rule 49 (exp -> exp TkAnd exp .)
    TkCBracket      reduce using rule 49 (exp -> exp TkAnd exp .)
    TkTwoPoints     reduce using rule 49 (exp -> exp TkAnd exp .)
    TkTo            reduce using rule 49 (exp -> exp TkAnd exp .)
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63
    TkLess          shift and go to state 66
    TkLeq           shift and go to state 67
    TkGeq           shift and go to state 68
    TkGreater       shift and go to state 69
    TkEqual         shift and go to state 70
    TkNEqual        shift and go to state 71

  ! TkPlus          [ reduce using rule 49 (exp -> exp TkAnd exp .) ]
  ! TkMinus         [ reduce using rule 49 (exp -> exp TkAnd exp .) ]
  ! TkMult          [ reduce using rule 49 (exp -> exp TkAnd exp .) ]
  ! TkLess          [ reduce using rule 49 (exp -> exp TkAnd exp .) ]
  ! TkLeq           [ reduce using rule 49 (exp -> exp TkAnd exp .) ]
  ! TkGeq           [ reduce using rule 49 (exp -> exp TkAnd exp .) ]
  ! TkGreater       [ reduce using rule 49 (exp -> exp TkAnd exp .) ]
  ! TkEqual         [ reduce using rule 49 (exp -> exp TkAnd exp .) ]
  ! TkNEqual        [ reduce using rule 49 (exp -> exp TkAnd exp .) ]
  ! TkAnd           [ shift and go to state 64 ]
  ! TkOr            [ shift and go to state 65 ]


state 101

    (50) exp -> exp TkOr exp .
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkOr            reduce using rule 50 (exp -> exp TkOr exp .)
    TkConcat        reduce using rule 50 (exp -> exp TkOr exp .)
    TkSemicolon     reduce using rule 50 (exp -> exp TkOr exp .)
    TkCBlock        reduce using rule 50 (exp -> exp TkOr exp .)
    TkFi            reduce using rule 50 (exp -> exp TkOr exp .)
    TkGuard         reduce using rule 50 (exp -> exp TkOr exp .)
    TkOd            reduce using rule 50 (exp -> exp TkOr exp .)
    TkRof           reduce using rule 50 (exp -> exp TkOr exp .)
    TkArrow         reduce using rule 50 (exp -> exp TkOr exp .)
    TkClosePar      reduce using rule 50 (exp -> exp TkOr exp .)
    TkComma         reduce using rule 50 (exp -> exp TkOr exp .)
    TkCBracket      reduce using rule 50 (exp -> exp TkOr exp .)
    TkTwoPoints     reduce using rule 50 (exp -> exp TkOr exp .)
    TkTo            reduce using rule 50 (exp -> exp TkOr exp .)
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63
    TkAnd           shift and go to state 64
    TkLess          shift and go to state 66
    TkLeq           shift and go to state 67
    TkGeq           shift and go to state 68
    TkGreater       shift and go to state 69
    TkEqual         shift and go to state 70
    TkNEqual        shift and go to state 71

  ! TkPlus          [ reduce using rule 50 (exp -> exp TkOr exp .) ]
  ! TkMinus         [ reduce using rule 50 (exp -> exp TkOr exp .) ]
  ! TkMult          [ reduce using rule 50 (exp -> exp TkOr exp .) ]
  ! TkAnd           [ reduce using rule 50 (exp -> exp TkOr exp .) ]
  ! TkLess          [ reduce using rule 50 (exp -> exp TkOr exp .) ]
  ! TkLeq           [ reduce using rule 50 (exp -> exp TkOr exp .) ]
  ! TkGeq           [ reduce using rule 50 (exp -> exp TkOr exp .) ]
  ! TkGreater       [ reduce using rule 50 (exp -> exp TkOr exp .) ]
  ! TkEqual         [ reduce using rule 50 (exp -> exp TkOr exp .) ]
  ! TkNEqual        [ reduce using rule 50 (exp -> exp TkOr exp .) ]
  ! TkOr            [ shift and go to state 65 ]


state 102

    (51) exp -> exp TkLess exp .
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkAnd           reduce using rule 51 (exp -> exp TkLess exp .)
    TkOr            reduce using rule 51 (exp -> exp TkLess exp .)
    TkLess          reduce using rule 51 (exp -> exp TkLess exp .)
    TkLeq           reduce using rule 51 (exp -> exp TkLess exp .)
    TkGeq           reduce using rule 51 (exp -> exp TkLess exp .)
    TkGreater       reduce using rule 51 (exp -> exp TkLess exp .)
    TkEqual         reduce using rule 51 (exp -> exp TkLess exp .)
    TkNEqual        reduce using rule 51 (exp -> exp TkLess exp .)
    TkConcat        reduce using rule 51 (exp -> exp TkLess exp .)
    TkSemicolon     reduce using rule 51 (exp -> exp TkLess exp .)
    TkCBlock        reduce using rule 51 (exp -> exp TkLess exp .)
    TkFi            reduce using rule 51 (exp -> exp TkLess exp .)
    TkGuard         reduce using rule 51 (exp -> exp TkLess exp .)
    TkOd            reduce using rule 51 (exp -> exp TkLess exp .)
    TkRof           reduce using rule 51 (exp -> exp TkLess exp .)
    TkArrow         reduce using rule 51 (exp -> exp TkLess exp .)
    TkClosePar      reduce using rule 51 (exp -> exp TkLess exp .)
    TkComma         reduce using rule 51 (exp -> exp TkLess exp .)
    TkCBracket      reduce using rule 51 (exp -> exp TkLess exp .)
    TkTwoPoints     reduce using rule 51 (exp -> exp TkLess exp .)
    TkTo            reduce using rule 51 (exp -> exp TkLess exp .)
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63

  ! TkPlus          [ reduce using rule 51 (exp -> exp TkLess exp .) ]
  ! TkMinus         [ reduce using rule 51 (exp -> exp TkLess exp .) ]
  ! TkMult          [ reduce using rule 51 (exp -> exp TkLess exp .) ]
  ! TkAnd           [ shift and go to state 64 ]
  ! TkOr            [ shift and go to state 65 ]
  ! TkLess          [ shift and go to state 66 ]
  ! TkLeq           [ shift and go to state 67 ]
  ! TkGeq           [ shift and go to state 68 ]
  ! TkGreater       [ shift and go to state 69 ]
  ! TkEqual         [ shift and go to state 70 ]
  ! TkNEqual        [ shift and go to state 71 ]


state 103

    (52) exp -> exp TkLeq exp .
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkAnd           reduce using rule 52 (exp -> exp TkLeq exp .)
    TkOr            reduce using rule 52 (exp -> exp TkLeq exp .)
    TkLess          reduce using rule 52 (exp -> exp TkLeq exp .)
    TkLeq           reduce using rule 52 (exp -> exp TkLeq exp .)
    TkGeq           reduce using rule 52 (exp -> exp TkLeq exp .)
    TkGreater       reduce using rule 52 (exp -> exp TkLeq exp .)
    TkEqual         reduce using rule 52 (exp -> exp TkLeq exp .)
    TkNEqual        reduce using rule 52 (exp -> exp TkLeq exp .)
    TkConcat        reduce using rule 52 (exp -> exp TkLeq exp .)
    TkSemicolon     reduce using rule 52 (exp -> exp TkLeq exp .)
    TkCBlock        reduce using rule 52 (exp -> exp TkLeq exp .)
    TkFi            reduce using rule 52 (exp -> exp TkLeq exp .)
    TkGuard         reduce using rule 52 (exp -> exp TkLeq exp .)
    TkOd            reduce using rule 52 (exp -> exp TkLeq exp .)
    TkRof           reduce using rule 52 (exp -> exp TkLeq exp .)
    TkArrow         reduce using rule 52 (exp -> exp TkLeq exp .)
    TkClosePar      reduce using rule 52 (exp -> exp TkLeq exp .)
    TkComma         reduce using rule 52 (exp -> exp TkLeq exp .)
    TkCBracket      reduce using rule 52 (exp -> exp TkLeq exp .)
    TkTwoPoints     reduce using rule 52 (exp -> exp TkLeq exp .)
    TkTo            reduce using rule 52 (exp -> exp TkLeq exp .)
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63

  ! TkPlus          [ reduce using rule 52 (exp -> exp TkLeq exp .) ]
  ! TkMinus         [ reduce using rule 52 (exp -> exp TkLeq exp .) ]
  ! TkMult          [ reduce using rule 52 (exp -> exp TkLeq exp .) ]
  ! TkAnd           [ shift and go to state 64 ]
  ! TkOr            [ shift and go to state 65 ]
  ! TkLess          [ shift and go to state 66 ]
  ! TkLeq           [ shift and go to state 67 ]
  ! TkGeq           [ shift and go to state 68 ]
  ! TkGreater       [ shift and go to state 69 ]
  ! TkEqual         [ shift and go to state 70 ]
  ! TkNEqual        [ shift and go to state 71 ]


state 104

    (53) exp -> exp TkGeq exp .
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkAnd           reduce using rule 53 (exp -> exp TkGeq exp .)
    TkOr            reduce using rule 53 (exp -> exp TkGeq exp .)
    TkLess          reduce using rule 53 (exp -> exp TkGeq exp .)
    TkLeq           reduce using rule 53 (exp -> exp TkGeq exp .)
    TkGeq           reduce using rule 53 (exp -> exp TkGeq exp .)
    TkGreater       reduce using rule 53 (exp -> exp TkGeq exp .)
    TkEqual         reduce using rule 53 (exp -> exp TkGeq exp .)
    TkNEqual        reduce using rule 53 (exp -> exp TkGeq exp .)
    TkConcat        reduce using rule 53 (exp -> exp TkGeq exp .)
    TkSemicolon     reduce using rule 53 (exp -> exp TkGeq exp .)
    TkCBlock        reduce using rule 53 (exp -> exp TkGeq exp .)
    TkFi            reduce using rule 53 (exp -> exp TkGeq exp .)
    TkGuard         reduce using rule 53 (exp -> exp TkGeq exp .)
    TkOd            reduce using rule 53 (exp -> exp TkGeq exp .)
    TkRof           reduce using rule 53 (exp -> exp TkGeq exp .)
    TkArrow         reduce using rule 53 (exp -> exp TkGeq exp .)
    TkClosePar      reduce using rule 53 (exp -> exp TkGeq exp .)
    TkComma         reduce using rule 53 (exp -> exp TkGeq exp .)
    TkCBracket      reduce using rule 53 (exp -> exp TkGeq exp .)
    TkTwoPoints     reduce using rule 53 (exp -> exp TkGeq exp .)
    TkTo            reduce using rule 53 (exp -> exp TkGeq exp .)
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63

  ! TkPlus          [ reduce using rule 53 (exp -> exp TkGeq exp .) ]
  ! TkMinus         [ reduce using rule 53 (exp -> exp TkGeq exp .) ]
  ! TkMult          [ reduce using rule 53 (exp -> exp TkGeq exp .) ]
  ! TkAnd           [ shift and go to state 64 ]
  ! TkOr            [ shift and go to state 65 ]
  ! TkLess          [ shift and go to state 66 ]
  ! TkLeq           [ shift and go to state 67 ]
  ! TkGeq           [ shift and go to state 68 ]
  ! TkGreater       [ shift and go to state 69 ]
  ! TkEqual         [ shift and go to state 70 ]
  ! TkNEqual        [ shift and go to state 71 ]


state 105

    (54) exp -> exp TkGreater exp .
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkAnd           reduce using rule 54 (exp -> exp TkGreater exp .)
    TkOr            reduce using rule 54 (exp -> exp TkGreater exp .)
    TkLess          reduce using rule 54 (exp -> exp TkGreater exp .)
    TkLeq           reduce using rule 54 (exp -> exp TkGreater exp .)
    TkGeq           reduce using rule 54 (exp -> exp TkGreater exp .)
    TkGreater       reduce using rule 54 (exp -> exp TkGreater exp .)
    TkEqual         reduce using rule 54 (exp -> exp TkGreater exp .)
    TkNEqual        reduce using rule 54 (exp -> exp TkGreater exp .)
    TkConcat        reduce using rule 54 (exp -> exp TkGreater exp .)
    TkSemicolon     reduce using rule 54 (exp -> exp TkGreater exp .)
    TkCBlock        reduce using rule 54 (exp -> exp TkGreater exp .)
    TkFi            reduce using rule 54 (exp -> exp TkGreater exp .)
    TkGuard         reduce using rule 54 (exp -> exp TkGreater exp .)
    TkOd            reduce using rule 54 (exp -> exp TkGreater exp .)
    TkRof           reduce using rule 54 (exp -> exp TkGreater exp .)
    TkArrow         reduce using rule 54 (exp -> exp TkGreater exp .)
    TkClosePar      reduce using rule 54 (exp -> exp TkGreater exp .)
    TkComma         reduce using rule 54 (exp -> exp TkGreater exp .)
    TkCBracket      reduce using rule 54 (exp -> exp TkGreater exp .)
    TkTwoPoints     reduce using rule 54 (exp -> exp TkGreater exp .)
    TkTo            reduce using rule 54 (exp -> exp TkGreater exp .)
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63

  ! TkPlus          [ reduce using rule 54 (exp -> exp TkGreater exp .) ]
  ! TkMinus         [ reduce using rule 54 (exp -> exp TkGreater exp .) ]
  ! TkMult          [ reduce using rule 54 (exp -> exp TkGreater exp .) ]
  ! TkAnd           [ shift and go to state 64 ]
  ! TkOr            [ shift and go to state 65 ]
  ! TkLess          [ shift and go to state 66 ]
  ! TkLeq           [ shift and go to state 67 ]
  ! TkGeq           [ shift and go to state 68 ]
  ! TkGreater       [ shift and go to state 69 ]
  ! TkEqual         [ shift and go to state 70 ]
  ! TkNEqual        [ shift and go to state 71 ]


state 106

    (55) exp -> exp TkEqual exp .
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkAnd           reduce using rule 55 (exp -> exp TkEqual exp .)
    TkOr            reduce using rule 55 (exp -> exp TkEqual exp .)
    TkEqual         reduce using rule 55 (exp -> exp TkEqual exp .)
    TkNEqual        reduce using rule 55 (exp -> exp TkEqual exp .)
    TkConcat        reduce using rule 55 (exp -> exp TkEqual exp .)
    TkSemicolon     reduce using rule 55 (exp -> exp TkEqual exp .)
    TkCBlock        reduce using rule 55 (exp -> exp TkEqual exp .)
    TkFi            reduce using rule 55 (exp -> exp TkEqual exp .)
    TkGuard         reduce using rule 55 (exp -> exp TkEqual exp .)
    TkOd            reduce using rule 55 (exp -> exp TkEqual exp .)
    TkRof           reduce using rule 55 (exp -> exp TkEqual exp .)
    TkArrow         reduce using rule 55 (exp -> exp TkEqual exp .)
    TkClosePar      reduce using rule 55 (exp -> exp TkEqual exp .)
    TkComma         reduce using rule 55 (exp -> exp TkEqual exp .)
    TkCBracket      reduce using rule 55 (exp -> exp TkEqual exp .)
    TkTwoPoints     reduce using rule 55 (exp -> exp TkEqual exp .)
    TkTo            reduce using rule 55 (exp -> exp TkEqual exp .)
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63
    TkLess          shift and go to state 66
    TkLeq           shift and go to state 67
    TkGeq           shift and go to state 68
    TkGreater       shift and go to state 69

  ! TkPlus          [ reduce using rule 55 (exp -> exp TkEqual exp .) ]
  ! TkMinus         [ reduce using rule 55 (exp -> exp TkEqual exp .) ]
  ! TkMult          [ reduce using rule 55 (exp -> exp TkEqual exp .) ]
  ! TkLess          [ reduce using rule 55 (exp -> exp TkEqual exp .) ]
  ! TkLeq           [ reduce using rule 55 (exp -> exp TkEqual exp .) ]
  ! TkGeq           [ reduce using rule 55 (exp -> exp TkEqual exp .) ]
  ! TkGreater       [ reduce using rule 55 (exp -> exp TkEqual exp .) ]
  ! TkAnd           [ shift and go to state 64 ]
  ! TkOr            [ shift and go to state 65 ]
  ! TkEqual         [ shift and go to state 70 ]
  ! TkNEqual        [ shift and go to state 71 ]


state 107

    (56) exp -> exp TkNEqual exp .
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkAnd           reduce using rule 56 (exp -> exp TkNEqual exp .)
    TkOr            reduce using rule 56 (exp -> exp TkNEqual exp .)
    TkEqual         reduce using rule 56 (exp -> exp TkNEqual exp .)
    TkNEqual        reduce using rule 56 (exp -> exp TkNEqual exp .)
    TkConcat        reduce using rule 56 (exp -> exp TkNEqual exp .)
    TkSemicolon     reduce using rule 56 (exp -> exp TkNEqual exp .)
    TkCBlock        reduce using rule 56 (exp -> exp TkNEqual exp .)
    TkFi            reduce using rule 56 (exp -> exp TkNEqual exp .)
    TkGuard         reduce using rule 56 (exp -> exp TkNEqual exp .)
    TkOd            reduce using rule 56 (exp -> exp TkNEqual exp .)
    TkRof           reduce using rule 56 (exp -> exp TkNEqual exp .)
    TkArrow         reduce using rule 56 (exp -> exp TkNEqual exp .)
    TkClosePar      reduce using rule 56 (exp -> exp TkNEqual exp .)
    TkComma         reduce using rule 56 (exp -> exp TkNEqual exp .)
    TkCBracket      reduce using rule 56 (exp -> exp TkNEqual exp .)
    TkTwoPoints     reduce using rule 56 (exp -> exp TkNEqual exp .)
    TkTo            reduce using rule 56 (exp -> exp TkNEqual exp .)
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63
    TkLess          shift and go to state 66
    TkLeq           shift and go to state 67
    TkGeq           shift and go to state 68
    TkGreater       shift and go to state 69

  ! TkPlus          [ reduce using rule 56 (exp -> exp TkNEqual exp .) ]
  ! TkMinus         [ reduce using rule 56 (exp -> exp TkNEqual exp .) ]
  ! TkMult          [ reduce using rule 56 (exp -> exp TkNEqual exp .) ]
  ! TkLess          [ reduce using rule 56 (exp -> exp TkNEqual exp .) ]
  ! TkLeq           [ reduce using rule 56 (exp -> exp TkNEqual exp .) ]
  ! TkGeq           [ reduce using rule 56 (exp -> exp TkNEqual exp .) ]
  ! TkGreater       [ reduce using rule 56 (exp -> exp TkNEqual exp .) ]
  ! TkAnd           [ shift and go to state 64 ]
  ! TkOr            [ shift and go to state 65 ]
  ! TkEqual         [ shift and go to state 70 ]
  ! TkNEqual        [ shift and go to state 71 ]


state 108

    (58) exp -> TkOpenPar exp TkClosePar .

    TkPlus          reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkMinus         reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkMult          reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkAnd           reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkOr            reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkLess          reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkLeq           reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkGeq           reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkGreater       reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkEqual         reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkNEqual        reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkConcat        reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkSemicolon     reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkCBlock        reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkFi            reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkGuard         reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkOd            reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkRof           reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkArrow         reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkClosePar      reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkComma         reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkCBracket      reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkTwoPoints     reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)
    TkTo            reduce using rule 58 (exp -> TkOpenPar exp TkClosePar .)


state 109

    (41) consArray -> TkId TkOBracket exp . TkCBracket
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkCBracket      shift and go to state 120
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63
    TkAnd           shift and go to state 64
    TkOr            shift and go to state 65
    TkLess          shift and go to state 66
    TkLeq           shift and go to state 67
    TkGeq           shift and go to state 68
    TkGreater       shift and go to state 69
    TkEqual         shift and go to state 70
    TkNEqual        shift and go to state 71


state 110

    (45) finish -> TkId TkOpenPar exp . TkTwoPoints exp TkClosePar
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkTwoPoints     shift and go to state 121
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63
    TkAnd           shift and go to state 64
    TkOr            shift and go to state 65
    TkLess          shift and go to state 66
    TkLeq           shift and go to state 67
    TkGeq           shift and go to state 68
    TkGreater       shift and go to state 69
    TkEqual         shift and go to state 70
    TkNEqual        shift and go to state 71


state 111

    (42) consArray -> modArray TkOBracket exp . TkCBracket
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkCBracket      shift and go to state 122
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63
    TkAnd           shift and go to state 64
    TkOr            shift and go to state 65
    TkLess          shift and go to state 66
    TkLeq           shift and go to state 67
    TkGeq           shift and go to state 68
    TkGreater       shift and go to state 69
    TkEqual         shift and go to state 70
    TkNEqual        shift and go to state 71


state 112

    (43) modArray -> modArray TkOpenPar exp . TkTwoPoints exp TkClosePar
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkTwoPoints     shift and go to state 123
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63
    TkAnd           shift and go to state 64
    TkOr            shift and go to state 65
    TkLess          shift and go to state 66
    TkLeq           shift and go to state 67
    TkGeq           shift and go to state 68
    TkGreater       shift and go to state 69
    TkEqual         shift and go to state 70
    TkNEqual        shift and go to state 71


state 113

    (30) arrayIni -> arrayIni TkComma . exp
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    exp                            shift and go to state 124
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 114

    (29) arrayIni -> exp TkComma . exp
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    exp                            shift and go to state 125
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 115

    (69) guards -> guards TkGuard then .

    TkFi            reduce using rule 69 (guards -> guards TkGuard then .)
    TkGuard         reduce using rule 69 (guards -> guards TkGuard then .)
    TkOd            reduce using rule 69 (guards -> guards TkGuard then .)


state 116

    (71) then -> exp TkArrow code .

    TkFi            reduce using rule 71 (then -> exp TkArrow code .)
    TkGuard         reduce using rule 71 (then -> exp TkArrow code .)
    TkOd            reduce using rule 71 (then -> exp TkArrow code .)


state 117

    (65) instFor -> TkFor range TkArrow code . TkRof

    TkRof           shift and go to state 126


state 118

    (66) range -> TkId TkIn exp . TkTo exp
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkTo            shift and go to state 127
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63
    TkAnd           shift and go to state 64
    TkOr            shift and go to state 65
    TkLess          shift and go to state 66
    TkLeq           shift and go to state 67
    TkGeq           shift and go to state 68
    TkGreater       shift and go to state 69
    TkEqual         shift and go to state 70
    TkNEqual        shift and go to state 71


state 119

    (14) type -> TkArray TkOBracket . TkNum TkSoForth TkNum TkCBracket
    (15) type -> TkArray TkOBracket . TkMinus TkNum TkSoForth TkMinus TkNum TkCBracket
    (16) type -> TkArray TkOBracket . TkNum TkSoForth TkMinus TkNum TkCBracket
    (17) type -> TkArray TkOBracket . TkMinus TkNum TkSoForth TkNum TkCBracket

    TkNum           shift and go to state 128
    TkMinus         shift and go to state 129


state 120

    (41) consArray -> TkId TkOBracket exp TkCBracket .

    TkPlus          reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkMinus         reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkMult          reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkAnd           reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkOr            reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkLess          reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkLeq           reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkGeq           reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkGreater       reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkEqual         reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkNEqual        reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkConcat        reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkSemicolon     reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkCBlock        reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkFi            reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkGuard         reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkOd            reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkRof           reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkArrow         reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkClosePar      reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkComma         reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkCBracket      reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkTwoPoints     reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)
    TkTo            reduce using rule 41 (consArray -> TkId TkOBracket exp TkCBracket .)


state 121

    (45) finish -> TkId TkOpenPar exp TkTwoPoints . exp TkClosePar
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    exp                            shift and go to state 130
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 122

    (42) consArray -> modArray TkOBracket exp TkCBracket .

    TkPlus          reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkMinus         reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkMult          reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkAnd           reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkOr            reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkLess          reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkLeq           reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkGeq           reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkGreater       reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkEqual         reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkNEqual        reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkConcat        reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkSemicolon     reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkCBlock        reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkFi            reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkGuard         reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkOd            reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkRof           reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkArrow         reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkClosePar      reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkComma         reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkCBracket      reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkTwoPoints     reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)
    TkTo            reduce using rule 42 (consArray -> modArray TkOBracket exp TkCBracket .)


state 123

    (43) modArray -> modArray TkOpenPar exp TkTwoPoints . exp TkClosePar
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    modArray                       shift and go to state 43
    exp                            shift and go to state 131
    consArray                      shift and go to state 38
    finish                         shift and go to state 44

state 124

    (30) arrayIni -> arrayIni TkComma exp .
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkComma         reduce using rule 30 (arrayIni -> arrayIni TkComma exp .)
    TkSemicolon     reduce using rule 30 (arrayIni -> arrayIni TkComma exp .)
    TkCBlock        reduce using rule 30 (arrayIni -> arrayIni TkComma exp .)
    TkFi            reduce using rule 30 (arrayIni -> arrayIni TkComma exp .)
    TkGuard         reduce using rule 30 (arrayIni -> arrayIni TkComma exp .)
    TkOd            reduce using rule 30 (arrayIni -> arrayIni TkComma exp .)
    TkRof           reduce using rule 30 (arrayIni -> arrayIni TkComma exp .)
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63
    TkAnd           shift and go to state 64
    TkOr            shift and go to state 65
    TkLess          shift and go to state 66
    TkLeq           shift and go to state 67
    TkGeq           shift and go to state 68
    TkGreater       shift and go to state 69
    TkEqual         shift and go to state 70
    TkNEqual        shift and go to state 71


state 125

    (29) arrayIni -> exp TkComma exp .
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkComma         reduce using rule 29 (arrayIni -> exp TkComma exp .)
    TkSemicolon     reduce using rule 29 (arrayIni -> exp TkComma exp .)
    TkCBlock        reduce using rule 29 (arrayIni -> exp TkComma exp .)
    TkFi            reduce using rule 29 (arrayIni -> exp TkComma exp .)
    TkGuard         reduce using rule 29 (arrayIni -> exp TkComma exp .)
    TkOd            reduce using rule 29 (arrayIni -> exp TkComma exp .)
    TkRof           reduce using rule 29 (arrayIni -> exp TkComma exp .)
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63
    TkAnd           shift and go to state 64
    TkOr            shift and go to state 65
    TkLess          shift and go to state 66
    TkLeq           shift and go to state 67
    TkGeq           shift and go to state 68
    TkGreater       shift and go to state 69
    TkEqual         shift and go to state 70
    TkNEqual        shift and go to state 71


state 126

    (65) instFor -> TkFor range TkArrow code TkRof .

    TkSemicolon     reduce using rule 65 (instFor -> TkFor range TkArrow code TkRof .)
    TkCBlock        reduce using rule 65 (instFor -> TkFor range TkArrow code TkRof .)
    TkFi            reduce using rule 65 (instFor -> TkFor range TkArrow code TkRof .)
    TkGuard         reduce using rule 65 (instFor -> TkFor range TkArrow code TkRof .)
    TkOd            reduce using rule 65 (instFor -> TkFor range TkArrow code TkRof .)
    TkRof           reduce using rule 65 (instFor -> TkFor range TkArrow code TkRof .)


state 127

    (66) range -> TkId TkIn exp TkTo . exp
    (46) exp -> . exp TkPlus exp
    (47) exp -> . exp TkMinus exp
    (48) exp -> . exp TkMult exp
    (49) exp -> . exp TkAnd exp
    (50) exp -> . exp TkOr exp
    (51) exp -> . exp TkLess exp
    (52) exp -> . exp TkLeq exp
    (53) exp -> . exp TkGeq exp
    (54) exp -> . exp TkGreater exp
    (55) exp -> . exp TkEqual exp
    (56) exp -> . exp TkNEqual exp
    (57) exp -> . TkNot exp
    (58) exp -> . TkOpenPar exp TkClosePar
    (59) exp -> . consArray
    (60) exp -> . TkMinus exp
    (61) exp -> . TkNum
    (62) exp -> . TkTrue
    (63) exp -> . TkFalse
    (64) exp -> . TkId
    (41) consArray -> . TkId TkOBracket exp TkCBracket
    (42) consArray -> . modArray TkOBracket exp TkCBracket
    (43) modArray -> . modArray TkOpenPar exp TkTwoPoints exp TkClosePar
    (44) modArray -> . finish
    (45) finish -> . TkId TkOpenPar exp TkTwoPoints exp TkClosePar

    TkNot           shift and go to state 36
    TkOpenPar       shift and go to state 37
    TkMinus         shift and go to state 35
    TkNum           shift and go to state 39
    TkTrue          shift and go to state 40
    TkFalse         shift and go to state 41
    TkId            shift and go to state 42

    exp                            shift and go to state 132
    consArray                      shift and go to state 38
    modArray                       shift and go to state 43
    finish                         shift and go to state 44

state 128

    (14) type -> TkArray TkOBracket TkNum . TkSoForth TkNum TkCBracket
    (16) type -> TkArray TkOBracket TkNum . TkSoForth TkMinus TkNum TkCBracket

    TkSoForth       shift and go to state 133


state 129

    (15) type -> TkArray TkOBracket TkMinus . TkNum TkSoForth TkMinus TkNum TkCBracket
    (17) type -> TkArray TkOBracket TkMinus . TkNum TkSoForth TkNum TkCBracket

    TkNum           shift and go to state 134


state 130

    (45) finish -> TkId TkOpenPar exp TkTwoPoints exp . TkClosePar
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkClosePar      shift and go to state 135
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63
    TkAnd           shift and go to state 64
    TkOr            shift and go to state 65
    TkLess          shift and go to state 66
    TkLeq           shift and go to state 67
    TkGeq           shift and go to state 68
    TkGreater       shift and go to state 69
    TkEqual         shift and go to state 70
    TkNEqual        shift and go to state 71


state 131

    (43) modArray -> modArray TkOpenPar exp TkTwoPoints exp . TkClosePar
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkClosePar      shift and go to state 136
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63
    TkAnd           shift and go to state 64
    TkOr            shift and go to state 65
    TkLess          shift and go to state 66
    TkLeq           shift and go to state 67
    TkGeq           shift and go to state 68
    TkGreater       shift and go to state 69
    TkEqual         shift and go to state 70
    TkNEqual        shift and go to state 71


state 132

    (66) range -> TkId TkIn exp TkTo exp .
    (46) exp -> exp . TkPlus exp
    (47) exp -> exp . TkMinus exp
    (48) exp -> exp . TkMult exp
    (49) exp -> exp . TkAnd exp
    (50) exp -> exp . TkOr exp
    (51) exp -> exp . TkLess exp
    (52) exp -> exp . TkLeq exp
    (53) exp -> exp . TkGeq exp
    (54) exp -> exp . TkGreater exp
    (55) exp -> exp . TkEqual exp
    (56) exp -> exp . TkNEqual exp

    TkArrow         reduce using rule 66 (range -> TkId TkIn exp TkTo exp .)
    TkPlus          shift and go to state 61
    TkMinus         shift and go to state 62
    TkMult          shift and go to state 63
    TkAnd           shift and go to state 64
    TkOr            shift and go to state 65
    TkLess          shift and go to state 66
    TkLeq           shift and go to state 67
    TkGeq           shift and go to state 68
    TkGreater       shift and go to state 69
    TkEqual         shift and go to state 70
    TkNEqual        shift and go to state 71


state 133

    (14) type -> TkArray TkOBracket TkNum TkSoForth . TkNum TkCBracket
    (16) type -> TkArray TkOBracket TkNum TkSoForth . TkMinus TkNum TkCBracket

    TkNum           shift and go to state 137
    TkMinus         shift and go to state 138


state 134

    (15) type -> TkArray TkOBracket TkMinus TkNum . TkSoForth TkMinus TkNum TkCBracket
    (17) type -> TkArray TkOBracket TkMinus TkNum . TkSoForth TkNum TkCBracket

    TkSoForth       shift and go to state 139


state 135

    (45) finish -> TkId TkOpenPar exp TkTwoPoints exp TkClosePar .

    TkOBracket      reduce using rule 45 (finish -> TkId TkOpenPar exp TkTwoPoints exp TkClosePar .)
    TkOpenPar       reduce using rule 45 (finish -> TkId TkOpenPar exp TkTwoPoints exp TkClosePar .)
    TkSemicolon     reduce using rule 45 (finish -> TkId TkOpenPar exp TkTwoPoints exp TkClosePar .)
    TkCBlock        reduce using rule 45 (finish -> TkId TkOpenPar exp TkTwoPoints exp TkClosePar .)
    TkFi            reduce using rule 45 (finish -> TkId TkOpenPar exp TkTwoPoints exp TkClosePar .)
    TkGuard         reduce using rule 45 (finish -> TkId TkOpenPar exp TkTwoPoints exp TkClosePar .)
    TkOd            reduce using rule 45 (finish -> TkId TkOpenPar exp TkTwoPoints exp TkClosePar .)
    TkRof           reduce using rule 45 (finish -> TkId TkOpenPar exp TkTwoPoints exp TkClosePar .)


state 136

    (43) modArray -> modArray TkOpenPar exp TkTwoPoints exp TkClosePar .

    TkOBracket      reduce using rule 43 (modArray -> modArray TkOpenPar exp TkTwoPoints exp TkClosePar .)
    TkOpenPar       reduce using rule 43 (modArray -> modArray TkOpenPar exp TkTwoPoints exp TkClosePar .)
    TkSemicolon     reduce using rule 43 (modArray -> modArray TkOpenPar exp TkTwoPoints exp TkClosePar .)
    TkCBlock        reduce using rule 43 (modArray -> modArray TkOpenPar exp TkTwoPoints exp TkClosePar .)
    TkFi            reduce using rule 43 (modArray -> modArray TkOpenPar exp TkTwoPoints exp TkClosePar .)
    TkGuard         reduce using rule 43 (modArray -> modArray TkOpenPar exp TkTwoPoints exp TkClosePar .)
    TkOd            reduce using rule 43 (modArray -> modArray TkOpenPar exp TkTwoPoints exp TkClosePar .)
    TkRof           reduce using rule 43 (modArray -> modArray TkOpenPar exp TkTwoPoints exp TkClosePar .)


state 137

    (14) type -> TkArray TkOBracket TkNum TkSoForth TkNum . TkCBracket

    TkCBracket      shift and go to state 140


state 138

    (16) type -> TkArray TkOBracket TkNum TkSoForth TkMinus . TkNum TkCBracket

    TkNum           shift and go to state 141


state 139

    (15) type -> TkArray TkOBracket TkMinus TkNum TkSoForth . TkMinus TkNum TkCBracket
    (17) type -> TkArray TkOBracket TkMinus TkNum TkSoForth . TkNum TkCBracket

    TkMinus         shift and go to state 142
    TkNum           shift and go to state 143


state 140

    (14) type -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket .

    TkSemicolon     reduce using rule 14 (type -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket .)
    TkCBlock        reduce using rule 14 (type -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket .)
    TkPrint         reduce using rule 14 (type -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket .)
    TkId            reduce using rule 14 (type -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket .)
    TkSkip          reduce using rule 14 (type -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket .)
    TkOBlock        reduce using rule 14 (type -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket .)
    TkIf            reduce using rule 14 (type -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket .)
    TkDo            reduce using rule 14 (type -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket .)
    TkFor           reduce using rule 14 (type -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket .)


state 141

    (16) type -> TkArray TkOBracket TkNum TkSoForth TkMinus TkNum . TkCBracket

    TkCBracket      shift and go to state 144


state 142

    (15) type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkMinus . TkNum TkCBracket

    TkNum           shift and go to state 145


state 143

    (17) type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkNum . TkCBracket

    TkCBracket      shift and go to state 146


state 144

    (16) type -> TkArray TkOBracket TkNum TkSoForth TkMinus TkNum TkCBracket .

    TkSemicolon     reduce using rule 16 (type -> TkArray TkOBracket TkNum TkSoForth TkMinus TkNum TkCBracket .)
    TkCBlock        reduce using rule 16 (type -> TkArray TkOBracket TkNum TkSoForth TkMinus TkNum TkCBracket .)
    TkPrint         reduce using rule 16 (type -> TkArray TkOBracket TkNum TkSoForth TkMinus TkNum TkCBracket .)
    TkId            reduce using rule 16 (type -> TkArray TkOBracket TkNum TkSoForth TkMinus TkNum TkCBracket .)
    TkSkip          reduce using rule 16 (type -> TkArray TkOBracket TkNum TkSoForth TkMinus TkNum TkCBracket .)
    TkOBlock        reduce using rule 16 (type -> TkArray TkOBracket TkNum TkSoForth TkMinus TkNum TkCBracket .)
    TkIf            reduce using rule 16 (type -> TkArray TkOBracket TkNum TkSoForth TkMinus TkNum TkCBracket .)
    TkDo            reduce using rule 16 (type -> TkArray TkOBracket TkNum TkSoForth TkMinus TkNum TkCBracket .)
    TkFor           reduce using rule 16 (type -> TkArray TkOBracket TkNum TkSoForth TkMinus TkNum TkCBracket .)


state 145

    (15) type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkMinus TkNum . TkCBracket

    TkCBracket      shift and go to state 147


state 146

    (17) type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkNum TkCBracket .

    TkSemicolon     reduce using rule 17 (type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkNum TkCBracket .)
    TkCBlock        reduce using rule 17 (type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkNum TkCBracket .)
    TkPrint         reduce using rule 17 (type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkNum TkCBracket .)
    TkId            reduce using rule 17 (type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkNum TkCBracket .)
    TkSkip          reduce using rule 17 (type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkNum TkCBracket .)
    TkOBlock        reduce using rule 17 (type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkNum TkCBracket .)
    TkIf            reduce using rule 17 (type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkNum TkCBracket .)
    TkDo            reduce using rule 17 (type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkNum TkCBracket .)
    TkFor           reduce using rule 17 (type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkNum TkCBracket .)


state 147

    (15) type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkMinus TkNum TkCBracket .

    TkSemicolon     reduce using rule 15 (type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkMinus TkNum TkCBracket .)
    TkCBlock        reduce using rule 15 (type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkMinus TkNum TkCBracket .)
    TkPrint         reduce using rule 15 (type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkMinus TkNum TkCBracket .)
    TkId            reduce using rule 15 (type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkMinus TkNum TkCBracket .)
    TkSkip          reduce using rule 15 (type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkMinus TkNum TkCBracket .)
    TkOBlock        reduce using rule 15 (type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkMinus TkNum TkCBracket .)
    TkIf            reduce using rule 15 (type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkMinus TkNum TkCBracket .)
    TkDo            reduce using rule 15 (type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkMinus TkNum TkCBracket .)
    TkFor           reduce using rule 15 (type -> TkArray TkOBracket TkMinus TkNum TkSoForth TkMinus TkNum TkCBracket .)

